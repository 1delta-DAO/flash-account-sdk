{
  "abi": [
    {
      "type": "constructor",
      "inputs": [
        {
          "name": "entryPoint_",
          "type": "address",
          "internalType": "contract IEntryPoint"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "receive",
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "addDeposit",
      "inputs": [],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "eip712Domain",
      "inputs": [],
      "outputs": [
        {
          "name": "fields",
          "type": "bytes1",
          "internalType": "bytes1"
        },
        {
          "name": "name",
          "type": "string",
          "internalType": "string"
        },
        {
          "name": "version",
          "type": "string",
          "internalType": "string"
        },
        {
          "name": "chainId",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "verifyingContract",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "salt",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "extensions",
          "type": "uint256[]",
          "internalType": "uint256[]"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "entryPoint",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract IEntryPoint"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "execute",
      "inputs": [
        {
          "name": "dest",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "value",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "func",
          "type": "bytes",
          "internalType": "bytes"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "executeBatch",
      "inputs": [
        {
          "name": "dest",
          "type": "address[]",
          "internalType": "address[]"
        },
        {
          "name": "func",
          "type": "bytes[]",
          "internalType": "bytes[]"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "executeBatch",
      "inputs": [
        {
          "name": "dest",
          "type": "address[]",
          "internalType": "address[]"
        },
        {
          "name": "value",
          "type": "uint256[]",
          "internalType": "uint256[]"
        },
        {
          "name": "func",
          "type": "bytes[]",
          "internalType": "bytes[]"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "getDeposit",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getMessageHash",
      "inputs": [
        {
          "name": "message",
          "type": "bytes",
          "internalType": "bytes"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getNonce",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "initialize",
      "inputs": [
        {
          "name": "owner_",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "isValidSignature",
      "inputs": [
        {
          "name": "hash",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "signature",
          "type": "bytes",
          "internalType": "bytes"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bytes4",
          "internalType": "bytes4"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "onERC1155BatchReceived",
      "inputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "",
          "type": "uint256[]",
          "internalType": "uint256[]"
        },
        {
          "name": "",
          "type": "uint256[]",
          "internalType": "uint256[]"
        },
        {
          "name": "",
          "type": "bytes",
          "internalType": "bytes"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bytes4",
          "internalType": "bytes4"
        }
      ],
      "stateMutability": "pure"
    },
    {
      "type": "function",
      "name": "onERC1155Received",
      "inputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "",
          "type": "bytes",
          "internalType": "bytes"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bytes4",
          "internalType": "bytes4"
        }
      ],
      "stateMutability": "pure"
    },
    {
      "type": "function",
      "name": "onERC721Received",
      "inputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "",
          "type": "bytes",
          "internalType": "bytes"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bytes4",
          "internalType": "bytes4"
        }
      ],
      "stateMutability": "pure"
    },
    {
      "type": "function",
      "name": "owner",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "performCreate",
      "inputs": [
        {
          "name": "value",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "initCode",
          "type": "bytes",
          "internalType": "bytes"
        }
      ],
      "outputs": [
        {
          "name": "createdAddr",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "performCreate2",
      "inputs": [
        {
          "name": "value",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "initCode",
          "type": "bytes",
          "internalType": "bytes"
        },
        {
          "name": "salt",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "outputs": [
        {
          "name": "createdAddr",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "supportsInterface",
      "inputs": [
        {
          "name": "interfaceId",
          "type": "bytes4",
          "internalType": "bytes4"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "transferOwnership",
      "inputs": [
        {
          "name": "newOwner",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "validateUserOp",
      "inputs": [
        {
          "name": "userOp",
          "type": "tuple",
          "internalType": "struct PackedUserOperation",
          "components": [
            {
              "name": "sender",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "nonce",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "initCode",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "callData",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "accountGasLimits",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "preVerificationGas",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "gasFees",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "paymasterAndData",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "signature",
              "type": "bytes",
              "internalType": "bytes"
            }
          ]
        },
        {
          "name": "userOpHash",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "missingAccountFunds",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "validationData",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "withdrawDepositTo",
      "inputs": [
        {
          "name": "withdrawAddress",
          "type": "address",
          "internalType": "address payable"
        },
        {
          "name": "amount",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "event",
      "name": "Initialized",
      "inputs": [
        {
          "name": "version",
          "type": "uint64",
          "indexed": false,
          "internalType": "uint64"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "LightAccountInitialized",
      "inputs": [
        {
          "name": "entryPoint",
          "type": "address",
          "indexed": true,
          "internalType": "contract IEntryPoint"
        },
        {
          "name": "owner",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "OwnershipTransferred",
      "inputs": [
        {
          "name": "previousOwner",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "newOwner",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "error",
      "name": "ArrayLengthMismatch",
      "inputs": []
    },
    {
      "type": "error",
      "name": "CreateFailed",
      "inputs": []
    },
    {
      "type": "error",
      "name": "ECDSAInvalidSignature",
      "inputs": []
    },
    {
      "type": "error",
      "name": "ECDSAInvalidSignatureLength",
      "inputs": [
        {
          "name": "length",
          "type": "uint256",
          "internalType": "uint256"
        }
      ]
    },
    {
      "type": "error",
      "name": "ECDSAInvalidSignatureS",
      "inputs": [
        {
          "name": "s",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ]
    },
    {
      "type": "error",
      "name": "InvalidInitialization",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidOwner",
      "inputs": [
        {
          "name": "owner",
          "type": "address",
          "internalType": "address"
        }
      ]
    },
    {
      "type": "error",
      "name": "InvalidSignatureType",
      "inputs": []
    },
    {
      "type": "error",
      "name": "Locked",
      "inputs": []
    },
    {
      "type": "error",
      "name": "NotAuthorized",
      "inputs": [
        {
          "name": "caller",
          "type": "address",
          "internalType": "address"
        }
      ]
    },
    {
      "type": "error",
      "name": "NotInitializing",
      "inputs": []
    },
    {
      "type": "error",
      "name": "ZeroAddressNotAllowed",
      "inputs": []
    }
  ],
  "bytecode": {
    "object": "0x610160604052348015610010575f5ffd5b506040516127a93803806127a983398101604081905261002f916101be565b306080524660a0527f5886a89854f64cffde2e739819f75451c42a85563516fe8eab2ef059d7e9f52660608061009c604080518082018252600c81526b119b185cda1058d8dbdd5b9d60a21b602080830191909152825180840190935260018352603160f81b9083015291565b815160209283012081519183019190912060c082905260e0819052604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f8152938401929092529082015246606082015230608082015260a09020610100525050610140526001600160a01b0381166101205261011961011f565b506101eb565b5f61012a6101405190565b805490915068010000000000000000900460ff161561015c5760405163f92ee8a960e01b815260040160405180910390fd5b80546001600160401b03908116146101bb5780546001600160401b0319166001600160401b0390811782556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50565b5f602082840312156101ce575f5ffd5b81516001600160a01b03811681146101e4575f5ffd5b9392505050565b60805160a05160c05160e05161010051610120516101405161253c61026d5f395f610da101525f81816103b40152818161099401528181610b0501528181610d3001528181610f68015281816112bd0152818161137101526116ca01525f61103901525f6110f301525f6110cd01525f61107d01525f61105a015261253c5ff3fe608060405260043610610165575f3560e01c80634d44560d116100c6578063bc197c811161007c578063d087d28811610057578063d087d28814610471578063f23a6e6114610485578063f2fde38b146104ca575f5ffd5b8063bc197c81146103f7578063c399ec881461043e578063c4d66de814610452575f5ffd5b80638da5cb5b116100ac5780638da5cb5b1461035d578063b0d691fe146103a6578063b61d27f6146103d8575f5ffd5b80634d44560d1461031757806384b0196e14610336575f5ffd5b806319822f7c1161011b5780634847be6f116101015780634847be6f146102c45780634a58db19146102fc5780634c8c9ea114610304575f5ffd5b806319822f7c1461028657806347e1da2a146102a5575f5ffd5b8063150b7a021161014b578063150b7a02146101d15780631626ba7e1461024657806318dfb3c714610265575f5ffd5b806301ffc9a7146101705780630a1028c4146101a4575f5ffd5b3661016c57005b5f5ffd5b34801561017b575f5ffd5b5061018f61018a366004611d0b565b6104e9565b60405190151581526020015b60405180910390f35b3480156101af575f5ffd5b506101c36101be366004611d77565b6105cd565b60405190815260200161019b565b3480156101dc575f5ffd5b506102156101eb366004611e91565b7f150b7a020000000000000000000000000000000000000000000000000000000095945050505050565b6040517fffffffff00000000000000000000000000000000000000000000000000000000909116815260200161019b565b348015610251575f5ffd5b50610215610260366004611eff565b61063a565b348015610270575f5ffd5b5061028461027f366004611f88565b6106c4565b005b348015610291575f5ffd5b506101c36102a0366004611ff4565b6107f0565b3480156102b0575f5ffd5b506102846102bf366004612043565b61080e565b6102d76102d23660046120e2565b610916565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161019b565b610284610992565b6102d7610312366004611eff565b610a34565b348015610322575f5ffd5b50610284610331366004612131565b610aae565b348015610341575f5ffd5b5061034a610bad565b60405161019b9796959493929190612189565b348015610368575f5ffd5b507ffe43cac86d2632475e173babfc884cd7f9ce21169af8b16db096c27563e34c095473ffffffffffffffffffffffffffffffffffffffff166102d7565b3480156103b1575f5ffd5b507f00000000000000000000000000000000000000000000000000000000000000006102d7565b3480156103e3575f5ffd5b506102846103f2366004612248565b610c55565b348015610402575f5ffd5b50610215610411366004612294565b7fbc197c810000000000000000000000000000000000000000000000000000000098975050505050505050565b348015610449575f5ffd5b506101c3610ceb565b34801561045d575f5ffd5b5061028461046c366004612357565b610d9f565b34801561047c575f5ffd5b506101c3610f1c565b348015610490575f5ffd5b5061021561049f366004612372565b7ff23a6e61000000000000000000000000000000000000000000000000000000009695505050505050565b3480156104d5575f5ffd5b506102846104e4366004612357565b610f97565b5f7fffffffff0000000000000000000000000000000000000000000000000000000082167f150b7a0200000000000000000000000000000000000000000000000000000000148061057b57507fffffffff0000000000000000000000000000000000000000000000000000000082167f4e2312e000000000000000000000000000000000000000000000000000000000145b806105c757507fffffffff0000000000000000000000000000000000000000000000000000000082167f01ffc9a700000000000000000000000000000000000000000000000000000000145b92915050565b5f5f7f5e3baca2936049843f06038876a12f03627b5edc98025751ecf2ac75626401998380519060200120604051602001610612929190918252602082015260400190565b60405160208183030381529060405280519060200120905061063381611037565b9392505050565b5f61066f6106688560405160200161065491815260200190565b6040516020818303038152906040526105cd565b848461114d565b1561069b57507f1626ba7e00000000000000000000000000000000000000000000000000000000610633565b507fffffffff000000000000000000000000000000000000000000000000000000009392505050565b6106cc6112a5565b60027f3c25485dd7fcb5b79c6e101a51e4ac1d265adde8f4b2805851861db54821825d55828114610729576040517fa24a13a600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b825f5b818110156107c4576107bc868683818110610749576107496123d7565b905060200201602081019061075e9190612357565b5f868685818110610771576107716123d7565b90506020028101906107839190612404565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284375f9201919091525061133792505050565b60010161072c565b505060017f3c25485dd7fcb5b79c6e101a51e4ac1d265adde8f4b2805851861db54821825d5550505050565b5f6107f9611359565b61080384846113f8565b9050610633826115a9565b6108166112a5565b60027f3c25485dd7fcb5b79c6e101a51e4ac1d265adde8f4b2805851861db54821825d5584811415806108495750848314155b15610880576040517fa24a13a600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b845f5b818110156108e8576108e08888838181106108a0576108a06123d7565b90506020020160208101906108b59190612357565b8787848181106108c7576108c76123d7565b90506020020135868685818110610771576107716123d7565b600101610883565b505060017f3c25485dd7fcb5b79c6e101a51e4ac1d265adde8f4b2805851861db54821825d55505050505050565b5f61091f6112a5565b60027f3c25485dd7fcb5b79c6e101a51e4ac1d265adde8f4b2805851861db54821825d55604051838086833783818389f5925050508061096657637e16b8cd5f526004601cfd5b60017f3c25485dd7fcb5b79c6e101a51e4ac1d265adde8f4b2805851861db54821825d55949350505050565b7f00000000000000000000000000000000000000000000000000000000000000006040517fb760faf900000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff919091169063b760faf99034906024015f604051808303818588803b158015610a1b575f5ffd5b505af1158015610a2d573d5f5f3e3d5ffd5b5050505050565b5f610a3d6112a5565b60027f3c25485dd7fcb5b79c6e101a51e4ac1d265adde8f4b2805851861db54821825d556040518280858337808287f09250505080610a8357637e16b8cd5f526004601cfd5b60017f3c25485dd7fcb5b79c6e101a51e4ac1d265adde8f4b2805851861db54821825d559392505050565b610ab66112a5565b73ffffffffffffffffffffffffffffffffffffffff8216610b03576040517f8579befe00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006040517f205c287800000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff848116600483015260248201849052919091169063205c2878906044015f604051808303815f87803b158015610b93575f5ffd5b505af1158015610ba5573d5f5f3e3d5ffd5b505050505050565b7f0f000000000000000000000000000000000000000000000000000000000000006060805f808083610c43604080518082018252600c81527f466c6173684163636f756e7400000000000000000000000000000000000000006020808301919091528251808401909352600183527f31000000000000000000000000000000000000000000000000000000000000009083015291565b97989097965046955030945091925090565b610c5d6112a5565b60027f3c25485dd7fcb5b79c6e101a51e4ac1d265adde8f4b2805851861db54821825d55610cc1848484848080601f0160208091040260200160405190810160405280939291908181526020018383808284375f9201919091525061133792505050565b60017f3c25485dd7fcb5b79c6e101a51e4ac1d265adde8f4b2805851861db54821825d5550505050565b6040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201525f9073ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016906370a08231906024015b602060405180830381865afa158015610d76573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610d9a9190612465565b905090565b7f0000000000000000000000000000000000000000000000000000000000000000805468010000000000000000810460ff16159067ffffffffffffffff165f81158015610de95750825b90505f8267ffffffffffffffff166001148015610e055750303b155b905081158015610e13575080155b15610e4a576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b84547fffffffffffffffffffffffffffffffffffffffffffffffff00000000000000001660011785558315610eab5784547fffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff16680100000000000000001785555b610eb486611611565b8315610ba55784547fffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a1505050505050565b6040517f35567e1a0000000000000000000000000000000000000000000000000000000081523060048201525f602482018190529073ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016906335567e1a90604401610d5b565b610f9f6112a5565b73ffffffffffffffffffffffffffffffffffffffff81161580610fd7575073ffffffffffffffffffffffffffffffffffffffff811630145b1561102b576040517fb20f76e300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff821660048201526024015b60405180910390fd5b61103481611755565b50565b7f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000030147f000000000000000000000000000000000000000000000000000000000000000046141661112a5750604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f81527f000000000000000000000000000000000000000000000000000000000000000060208201527f00000000000000000000000000000000000000000000000000000000000000009181019190915246606082015230608082015260a090205b6719010000000000005f5280601a5281603a52604260182090505f603a52919050565b5f6001821015611189576040517f60cd402d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f83835f81811061119c5761119c6123d7565b919091013560f81c91508190506111ff576111f7856111be85600181896124a9565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284375f9201919091525061185692505050565b915050610633565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60ff821601611273576111f78561123a85600181896124a9565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284375f920191909152506118c492505050565b6040517f60cd402d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016148015906112eb5750333014155b80156112fc57506112fa61190d565b155b15611335576040517f4a0bfec1000000000000000000000000000000000000000000000000000000008152336004820152602401611022565b565b5f5f82516020840185875af180611353576040513d5f823e3d81fd5b50505050565b3373ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614611335576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f6163636f756e743a206e6f742066726f6d20456e747279506f696e74000000006044820152606401611022565b5f6001611409610100850185612404565b90501015611443576040517f60cd402d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f611452610100850185612404565b5f818110611462576114626123d7565b919091013560f81c9150819050611513577f19457468657265756d205369676e6564204d6573736167653a0a3332000000005f908152601c849052603c8120906114b0610100870187612404565b6114be9160019082906124a9565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284375f920191909152509293506115099250611504915084905083611856565b61197f565b93505050506105c7565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60ff821601611273575f61154c610100860186612404565b61155a9160019082906124a9565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284375f920191909152509293506115a092506115049150869050836118c4565b95945050505050565b8015611034576040515f9033907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90849084818181858888f193505050503d805f8114610a2d576040519150601f19603f3d011682016040523d82523d5f602084013e610a2d565b73ffffffffffffffffffffffffffffffffffffffff8116611660576040517fb20f76e30000000000000000000000000000000000000000000000000000000081525f6004820152602401611022565b807ffe43cac86d2632475e173babfc884cd7f9ce21169af8b16db096c27563e34c0980547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff928316179055604051828216917f000000000000000000000000000000000000000000000000000000000000000016907fec6a23b49d2c363d250c9dda15610e835d428207d15ddb36a6c230e37371ddf1905f90a360405173ffffffffffffffffffffffffffffffffffffffff8216905f907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350565b7ffe43cac86d2632475e173babfc884cd7f9ce21169af8b16db096c27563e34c09805473ffffffffffffffffffffffffffffffffffffffff9081169083168190036117e4576040517fb20f76e300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff84166004820152602401611022565b81547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff8481169182178455604051908316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a3505050565b5f806118628484611993565b90506118a27ffe43cac86d2632475e173babfc884cd7f9ce21169af8b16db096c27563e34c095473ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff9182169116149392505050565b5f6106336119067ffe43cac86d2632475e173babfc884cd7f9ce21169af8b16db096c27563e34c095473ffffffffffffffffffffffffffffffffffffffff1690565b84846119bb565b5f61194c7ffe43cac86d2632475e173babfc884cd7f9ce21169af8b16db096c27563e34c095473ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b5f8161198c5760016105c7565b5f92915050565b5f5f5f5f6119a18686611ae6565b9250925092506119b18282611b2f565b5090949350505050565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1685856040516024016119e89291906124d0565b60408051601f198184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f1626ba7e0000000000000000000000000000000000000000000000000000000017905251611a4b91906124f0565b5f60405180830381855afa9150503d805f8114611a83576040519150601f19603f3d011682016040523d82523d5f602084013e611a88565b606091505b5091509150818015611a9c57506020815110155b8015611adc575080517f1626ba7e0000000000000000000000000000000000000000000000000000000090611ada9083016020908101908401612465565b145b9695505050505050565b5f5f5f8351604103611b1d576020840151604085015160608601515f1a611b0f88828585611c36565b955095509550505050611b28565b505081515f91506002905b9250925092565b5f826003811115611b4257611b4261247c565b03611b4b575050565b6001826003811115611b5f57611b5f61247c565b03611b96576040517ff645eedf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002826003811115611baa57611baa61247c565b03611be4576040517ffce698f700000000000000000000000000000000000000000000000000000000815260048101829052602401611022565b6003826003811115611bf857611bf861247c565b03611c32576040517fd78bce0c00000000000000000000000000000000000000000000000000000000815260048101829052602401611022565b5050565b5f80807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0841115611c6f57505f91506003905082611d01565b604080515f808252602082018084528a905260ff891692820192909252606081018790526080810186905260019060a0016020604051602081039080840390855afa158015611cc0573d5f5f3e3d5ffd5b5050604051601f19015191505073ffffffffffffffffffffffffffffffffffffffff8116611cf857505f925060019150829050611d01565b92505f91508190505b9450945094915050565b5f60208284031215611d1b575f5ffd5b81357fffffffff0000000000000000000000000000000000000000000000000000000081168114610633575f5ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b5f60208284031215611d87575f5ffd5b813567ffffffffffffffff811115611d9d575f5ffd5b8201601f81018413611dad575f5ffd5b803567ffffffffffffffff811115611dc757611dc7611d4a565b604051601f19603f601f19601f8501160116810181811067ffffffffffffffff82111715611df757611df7611d4a565b604052818152828201602001861015611e0e575f5ffd5b816020840160208301375f91810160200191909152949350505050565b73ffffffffffffffffffffffffffffffffffffffff81168114611034575f5ffd5b5f5f83601f840112611e5c575f5ffd5b50813567ffffffffffffffff811115611e73575f5ffd5b602083019150836020828501011115611e8a575f5ffd5b9250929050565b5f5f5f5f5f60808688031215611ea5575f5ffd5b8535611eb081611e2b565b94506020860135611ec081611e2b565b935060408601359250606086013567ffffffffffffffff811115611ee2575f5ffd5b611eee88828901611e4c565b969995985093965092949392505050565b5f5f5f60408486031215611f11575f5ffd5b83359250602084013567ffffffffffffffff811115611f2e575f5ffd5b611f3a86828701611e4c565b9497909650939450505050565b5f5f83601f840112611f57575f5ffd5b50813567ffffffffffffffff811115611f6e575f5ffd5b6020830191508360208260051b8501011115611e8a575f5ffd5b5f5f5f5f60408587031215611f9b575f5ffd5b843567ffffffffffffffff811115611fb1575f5ffd5b611fbd87828801611f47565b909550935050602085013567ffffffffffffffff811115611fdc575f5ffd5b611fe887828801611f47565b95989497509550505050565b5f5f5f60608486031215612006575f5ffd5b833567ffffffffffffffff81111561201c575f5ffd5b8401610120818703121561202e575f5ffd5b95602085013595506040909401359392505050565b5f5f5f5f5f5f60608789031215612058575f5ffd5b863567ffffffffffffffff81111561206e575f5ffd5b61207a89828a01611f47565b909750955050602087013567ffffffffffffffff811115612099575f5ffd5b6120a589828a01611f47565b909550935050604087013567ffffffffffffffff8111156120c4575f5ffd5b6120d089828a01611f47565b979a9699509497509295939492505050565b5f5f5f5f606085870312156120f5575f5ffd5b84359350602085013567ffffffffffffffff811115612112575f5ffd5b61211e87828801611e4c565b9598909750949560400135949350505050565b5f5f60408385031215612142575f5ffd5b823561214d81611e2b565b946020939093013593505050565b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b7fff000000000000000000000000000000000000000000000000000000000000008816815260e060208201525f6121c360e083018961215b565b82810360408401526121d5818961215b565b6060840188905273ffffffffffffffffffffffffffffffffffffffff8716608085015260a0840186905283810360c0850152845180825260208087019350909101905f5b81811015612237578351835260209384019390920191600101612219565b50909b9a5050505050505050505050565b5f5f5f5f6060858703121561225b575f5ffd5b843561226681611e2b565b935060208501359250604085013567ffffffffffffffff811115612288575f5ffd5b611fe887828801611e4c565b5f5f5f5f5f5f5f5f60a0898b0312156122ab575f5ffd5b88356122b681611e2b565b975060208901356122c681611e2b565b9650604089013567ffffffffffffffff8111156122e1575f5ffd5b6122ed8b828c01611f47565b909750955050606089013567ffffffffffffffff81111561230c575f5ffd5b6123188b828c01611f47565b909550935050608089013567ffffffffffffffff811115612337575f5ffd5b6123438b828c01611e4c565b999c989b5096995094979396929594505050565b5f60208284031215612367575f5ffd5b813561063381611e2b565b5f5f5f5f5f5f60a08789031215612387575f5ffd5b863561239281611e2b565b955060208701356123a281611e2b565b94506040870135935060608701359250608087013567ffffffffffffffff8111156123cb575f5ffd5b6120d089828a01611e4c565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f5f83357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112612437575f5ffd5b83018035915067ffffffffffffffff821115612451575f5ffd5b602001915036819003821315611e8a575f5ffd5b5f60208284031215612475575f5ffd5b5051919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffd5b5f5f858511156124b7575f5ffd5b838611156124c3575f5ffd5b5050820193919092039150565b828152604060208201525f6124e8604083018461215b565b949350505050565b5f82518060208501845e5f92019182525091905056fea2646970667358221220bfa34607ae2d21f3ddbc7e693e762987f39f5972eeb055f91e952c989647117e64736f6c634300081c0033",
    "sourceMap": "1209:7704:1:-:0;;;2562:169;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2157:4:12;2119:45;;2191:13;2174:30;;1725:66:1;2215:18:12;;2331:23;8405:21:1;;;;;;;;;;;-1:-1:-1;;;8405:21:1;;;;;;;;8534:13;;;;;;;;;;;-1:-1:-1;;;8534:13:1;;;;8405:21;8235:319;2331:23:12;2431:22;;;;;;;2545:25;;;;;;;;;2580:26;;;;2616:32;;;;2828:4;2822:11;;2893:16;2883:27;;2934:12;;;2927:30;;;;2981:12;;;2974:33;3045:9;3038:4;3031:12;;3024:31;3093:9;3086:4;3079:12;;3072:31;3146:4;3133:18;;3184:34;;-1:-1:-1;;3215:34:11;;-1:-1:-1;;;;;2666:26:1;::::1;;::::0;2702:22:::1;:20;:22::i;:::-;2562:169:::0;1209:7704;;7249:401:11;7308:47;7358:26;8234:16;;;8098:242;7358:26;7399:21;;;;-1:-1:-1;7399:21:11;;;;;7395:82;;;7443:23;;-1:-1:-1;;;7443:23:11;;;;;;;;;;;7395:82;7490:20;;-1:-1:-1;;;;;7490:20:11;;;:40;7486:158;;7546:39;;-1:-1:-1;;;;;;7546:39:11;-1:-1:-1;;;;;7546:39:11;;;;;7604:29;;474:50:231;;;7604:29:11;;462:2:231;447:18;7604:29:11;;;;;;;7486:158;7298:352;7249:401::o;14:311:231:-;105:6;158:2;146:9;137:7;133:23;129:32;126:52;;;174:1;171;164:12;126:52;200:16;;-1:-1:-1;;;;;245:31:231;;235:42;;225:70;;291:1;288;281:12;225:70;314:5;14:311;-1:-1:-1;;;14:311:231:o;330:200::-;1209:7704:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405260043610610165575f3560e01c80634d44560d116100c6578063bc197c811161007c578063d087d28811610057578063d087d28814610471578063f23a6e6114610485578063f2fde38b146104ca575f5ffd5b8063bc197c81146103f7578063c399ec881461043e578063c4d66de814610452575f5ffd5b80638da5cb5b116100ac5780638da5cb5b1461035d578063b0d691fe146103a6578063b61d27f6146103d8575f5ffd5b80634d44560d1461031757806384b0196e14610336575f5ffd5b806319822f7c1161011b5780634847be6f116101015780634847be6f146102c45780634a58db19146102fc5780634c8c9ea114610304575f5ffd5b806319822f7c1461028657806347e1da2a146102a5575f5ffd5b8063150b7a021161014b578063150b7a02146101d15780631626ba7e1461024657806318dfb3c714610265575f5ffd5b806301ffc9a7146101705780630a1028c4146101a4575f5ffd5b3661016c57005b5f5ffd5b34801561017b575f5ffd5b5061018f61018a366004611d0b565b6104e9565b60405190151581526020015b60405180910390f35b3480156101af575f5ffd5b506101c36101be366004611d77565b6105cd565b60405190815260200161019b565b3480156101dc575f5ffd5b506102156101eb366004611e91565b7f150b7a020000000000000000000000000000000000000000000000000000000095945050505050565b6040517fffffffff00000000000000000000000000000000000000000000000000000000909116815260200161019b565b348015610251575f5ffd5b50610215610260366004611eff565b61063a565b348015610270575f5ffd5b5061028461027f366004611f88565b6106c4565b005b348015610291575f5ffd5b506101c36102a0366004611ff4565b6107f0565b3480156102b0575f5ffd5b506102846102bf366004612043565b61080e565b6102d76102d23660046120e2565b610916565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161019b565b610284610992565b6102d7610312366004611eff565b610a34565b348015610322575f5ffd5b50610284610331366004612131565b610aae565b348015610341575f5ffd5b5061034a610bad565b60405161019b9796959493929190612189565b348015610368575f5ffd5b507ffe43cac86d2632475e173babfc884cd7f9ce21169af8b16db096c27563e34c095473ffffffffffffffffffffffffffffffffffffffff166102d7565b3480156103b1575f5ffd5b507f00000000000000000000000000000000000000000000000000000000000000006102d7565b3480156103e3575f5ffd5b506102846103f2366004612248565b610c55565b348015610402575f5ffd5b50610215610411366004612294565b7fbc197c810000000000000000000000000000000000000000000000000000000098975050505050505050565b348015610449575f5ffd5b506101c3610ceb565b34801561045d575f5ffd5b5061028461046c366004612357565b610d9f565b34801561047c575f5ffd5b506101c3610f1c565b348015610490575f5ffd5b5061021561049f366004612372565b7ff23a6e61000000000000000000000000000000000000000000000000000000009695505050505050565b3480156104d5575f5ffd5b506102846104e4366004612357565b610f97565b5f7fffffffff0000000000000000000000000000000000000000000000000000000082167f150b7a0200000000000000000000000000000000000000000000000000000000148061057b57507fffffffff0000000000000000000000000000000000000000000000000000000082167f4e2312e000000000000000000000000000000000000000000000000000000000145b806105c757507fffffffff0000000000000000000000000000000000000000000000000000000082167f01ffc9a700000000000000000000000000000000000000000000000000000000145b92915050565b5f5f7f5e3baca2936049843f06038876a12f03627b5edc98025751ecf2ac75626401998380519060200120604051602001610612929190918252602082015260400190565b60405160208183030381529060405280519060200120905061063381611037565b9392505050565b5f61066f6106688560405160200161065491815260200190565b6040516020818303038152906040526105cd565b848461114d565b1561069b57507f1626ba7e00000000000000000000000000000000000000000000000000000000610633565b507fffffffff000000000000000000000000000000000000000000000000000000009392505050565b6106cc6112a5565b60027f3c25485dd7fcb5b79c6e101a51e4ac1d265adde8f4b2805851861db54821825d55828114610729576040517fa24a13a600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b825f5b818110156107c4576107bc868683818110610749576107496123d7565b905060200201602081019061075e9190612357565b5f868685818110610771576107716123d7565b90506020028101906107839190612404565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284375f9201919091525061133792505050565b60010161072c565b505060017f3c25485dd7fcb5b79c6e101a51e4ac1d265adde8f4b2805851861db54821825d5550505050565b5f6107f9611359565b61080384846113f8565b9050610633826115a9565b6108166112a5565b60027f3c25485dd7fcb5b79c6e101a51e4ac1d265adde8f4b2805851861db54821825d5584811415806108495750848314155b15610880576040517fa24a13a600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b845f5b818110156108e8576108e08888838181106108a0576108a06123d7565b90506020020160208101906108b59190612357565b8787848181106108c7576108c76123d7565b90506020020135868685818110610771576107716123d7565b600101610883565b505060017f3c25485dd7fcb5b79c6e101a51e4ac1d265adde8f4b2805851861db54821825d55505050505050565b5f61091f6112a5565b60027f3c25485dd7fcb5b79c6e101a51e4ac1d265adde8f4b2805851861db54821825d55604051838086833783818389f5925050508061096657637e16b8cd5f526004601cfd5b60017f3c25485dd7fcb5b79c6e101a51e4ac1d265adde8f4b2805851861db54821825d55949350505050565b7f00000000000000000000000000000000000000000000000000000000000000006040517fb760faf900000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff919091169063b760faf99034906024015f604051808303818588803b158015610a1b575f5ffd5b505af1158015610a2d573d5f5f3e3d5ffd5b5050505050565b5f610a3d6112a5565b60027f3c25485dd7fcb5b79c6e101a51e4ac1d265adde8f4b2805851861db54821825d556040518280858337808287f09250505080610a8357637e16b8cd5f526004601cfd5b60017f3c25485dd7fcb5b79c6e101a51e4ac1d265adde8f4b2805851861db54821825d559392505050565b610ab66112a5565b73ffffffffffffffffffffffffffffffffffffffff8216610b03576040517f8579befe00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006040517f205c287800000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff848116600483015260248201849052919091169063205c2878906044015f604051808303815f87803b158015610b93575f5ffd5b505af1158015610ba5573d5f5f3e3d5ffd5b505050505050565b7f0f000000000000000000000000000000000000000000000000000000000000006060805f808083610c43604080518082018252600c81527f466c6173684163636f756e7400000000000000000000000000000000000000006020808301919091528251808401909352600183527f31000000000000000000000000000000000000000000000000000000000000009083015291565b97989097965046955030945091925090565b610c5d6112a5565b60027f3c25485dd7fcb5b79c6e101a51e4ac1d265adde8f4b2805851861db54821825d55610cc1848484848080601f0160208091040260200160405190810160405280939291908181526020018383808284375f9201919091525061133792505050565b60017f3c25485dd7fcb5b79c6e101a51e4ac1d265adde8f4b2805851861db54821825d5550505050565b6040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201525f9073ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016906370a08231906024015b602060405180830381865afa158015610d76573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610d9a9190612465565b905090565b7f0000000000000000000000000000000000000000000000000000000000000000805468010000000000000000810460ff16159067ffffffffffffffff165f81158015610de95750825b90505f8267ffffffffffffffff166001148015610e055750303b155b905081158015610e13575080155b15610e4a576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b84547fffffffffffffffffffffffffffffffffffffffffffffffff00000000000000001660011785558315610eab5784547fffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff16680100000000000000001785555b610eb486611611565b8315610ba55784547fffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a1505050505050565b6040517f35567e1a0000000000000000000000000000000000000000000000000000000081523060048201525f602482018190529073ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016906335567e1a90604401610d5b565b610f9f6112a5565b73ffffffffffffffffffffffffffffffffffffffff81161580610fd7575073ffffffffffffffffffffffffffffffffffffffff811630145b1561102b576040517fb20f76e300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff821660048201526024015b60405180910390fd5b61103481611755565b50565b7f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000030147f000000000000000000000000000000000000000000000000000000000000000046141661112a5750604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f81527f000000000000000000000000000000000000000000000000000000000000000060208201527f00000000000000000000000000000000000000000000000000000000000000009181019190915246606082015230608082015260a090205b6719010000000000005f5280601a5281603a52604260182090505f603a52919050565b5f6001821015611189576040517f60cd402d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f83835f81811061119c5761119c6123d7565b919091013560f81c91508190506111ff576111f7856111be85600181896124a9565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284375f9201919091525061185692505050565b915050610633565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60ff821601611273576111f78561123a85600181896124a9565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284375f920191909152506118c492505050565b6040517f60cd402d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016148015906112eb5750333014155b80156112fc57506112fa61190d565b155b15611335576040517f4a0bfec1000000000000000000000000000000000000000000000000000000008152336004820152602401611022565b565b5f5f82516020840185875af180611353576040513d5f823e3d81fd5b50505050565b3373ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614611335576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f6163636f756e743a206e6f742066726f6d20456e747279506f696e74000000006044820152606401611022565b5f6001611409610100850185612404565b90501015611443576040517f60cd402d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f611452610100850185612404565b5f818110611462576114626123d7565b919091013560f81c9150819050611513577f19457468657265756d205369676e6564204d6573736167653a0a3332000000005f908152601c849052603c8120906114b0610100870187612404565b6114be9160019082906124a9565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284375f920191909152509293506115099250611504915084905083611856565b61197f565b93505050506105c7565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60ff821601611273575f61154c610100860186612404565b61155a9160019082906124a9565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284375f920191909152509293506115a092506115049150869050836118c4565b95945050505050565b8015611034576040515f9033907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90849084818181858888f193505050503d805f8114610a2d576040519150601f19603f3d011682016040523d82523d5f602084013e610a2d565b73ffffffffffffffffffffffffffffffffffffffff8116611660576040517fb20f76e30000000000000000000000000000000000000000000000000000000081525f6004820152602401611022565b807ffe43cac86d2632475e173babfc884cd7f9ce21169af8b16db096c27563e34c0980547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff928316179055604051828216917f000000000000000000000000000000000000000000000000000000000000000016907fec6a23b49d2c363d250c9dda15610e835d428207d15ddb36a6c230e37371ddf1905f90a360405173ffffffffffffffffffffffffffffffffffffffff8216905f907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350565b7ffe43cac86d2632475e173babfc884cd7f9ce21169af8b16db096c27563e34c09805473ffffffffffffffffffffffffffffffffffffffff9081169083168190036117e4576040517fb20f76e300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff84166004820152602401611022565b81547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff8481169182178455604051908316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a3505050565b5f806118628484611993565b90506118a27ffe43cac86d2632475e173babfc884cd7f9ce21169af8b16db096c27563e34c095473ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff9182169116149392505050565b5f6106336119067ffe43cac86d2632475e173babfc884cd7f9ce21169af8b16db096c27563e34c095473ffffffffffffffffffffffffffffffffffffffff1690565b84846119bb565b5f61194c7ffe43cac86d2632475e173babfc884cd7f9ce21169af8b16db096c27563e34c095473ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b5f8161198c5760016105c7565b5f92915050565b5f5f5f5f6119a18686611ae6565b9250925092506119b18282611b2f565b5090949350505050565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1685856040516024016119e89291906124d0565b60408051601f198184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f1626ba7e0000000000000000000000000000000000000000000000000000000017905251611a4b91906124f0565b5f60405180830381855afa9150503d805f8114611a83576040519150601f19603f3d011682016040523d82523d5f602084013e611a88565b606091505b5091509150818015611a9c57506020815110155b8015611adc575080517f1626ba7e0000000000000000000000000000000000000000000000000000000090611ada9083016020908101908401612465565b145b9695505050505050565b5f5f5f8351604103611b1d576020840151604085015160608601515f1a611b0f88828585611c36565b955095509550505050611b28565b505081515f91506002905b9250925092565b5f826003811115611b4257611b4261247c565b03611b4b575050565b6001826003811115611b5f57611b5f61247c565b03611b96576040517ff645eedf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002826003811115611baa57611baa61247c565b03611be4576040517ffce698f700000000000000000000000000000000000000000000000000000000815260048101829052602401611022565b6003826003811115611bf857611bf861247c565b03611c32576040517fd78bce0c00000000000000000000000000000000000000000000000000000000815260048101829052602401611022565b5050565b5f80807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0841115611c6f57505f91506003905082611d01565b604080515f808252602082018084528a905260ff891692820192909252606081018790526080810186905260019060a0016020604051602081039080840390855afa158015611cc0573d5f5f3e3d5ffd5b5050604051601f19015191505073ffffffffffffffffffffffffffffffffffffffff8116611cf857505f925060019150829050611d01565b92505f91508190505b9450945094915050565b5f60208284031215611d1b575f5ffd5b81357fffffffff0000000000000000000000000000000000000000000000000000000081168114610633575f5ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b5f60208284031215611d87575f5ffd5b813567ffffffffffffffff811115611d9d575f5ffd5b8201601f81018413611dad575f5ffd5b803567ffffffffffffffff811115611dc757611dc7611d4a565b604051601f19603f601f19601f8501160116810181811067ffffffffffffffff82111715611df757611df7611d4a565b604052818152828201602001861015611e0e575f5ffd5b816020840160208301375f91810160200191909152949350505050565b73ffffffffffffffffffffffffffffffffffffffff81168114611034575f5ffd5b5f5f83601f840112611e5c575f5ffd5b50813567ffffffffffffffff811115611e73575f5ffd5b602083019150836020828501011115611e8a575f5ffd5b9250929050565b5f5f5f5f5f60808688031215611ea5575f5ffd5b8535611eb081611e2b565b94506020860135611ec081611e2b565b935060408601359250606086013567ffffffffffffffff811115611ee2575f5ffd5b611eee88828901611e4c565b969995985093965092949392505050565b5f5f5f60408486031215611f11575f5ffd5b83359250602084013567ffffffffffffffff811115611f2e575f5ffd5b611f3a86828701611e4c565b9497909650939450505050565b5f5f83601f840112611f57575f5ffd5b50813567ffffffffffffffff811115611f6e575f5ffd5b6020830191508360208260051b8501011115611e8a575f5ffd5b5f5f5f5f60408587031215611f9b575f5ffd5b843567ffffffffffffffff811115611fb1575f5ffd5b611fbd87828801611f47565b909550935050602085013567ffffffffffffffff811115611fdc575f5ffd5b611fe887828801611f47565b95989497509550505050565b5f5f5f60608486031215612006575f5ffd5b833567ffffffffffffffff81111561201c575f5ffd5b8401610120818703121561202e575f5ffd5b95602085013595506040909401359392505050565b5f5f5f5f5f5f60608789031215612058575f5ffd5b863567ffffffffffffffff81111561206e575f5ffd5b61207a89828a01611f47565b909750955050602087013567ffffffffffffffff811115612099575f5ffd5b6120a589828a01611f47565b909550935050604087013567ffffffffffffffff8111156120c4575f5ffd5b6120d089828a01611f47565b979a9699509497509295939492505050565b5f5f5f5f606085870312156120f5575f5ffd5b84359350602085013567ffffffffffffffff811115612112575f5ffd5b61211e87828801611e4c565b9598909750949560400135949350505050565b5f5f60408385031215612142575f5ffd5b823561214d81611e2b565b946020939093013593505050565b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b7fff000000000000000000000000000000000000000000000000000000000000008816815260e060208201525f6121c360e083018961215b565b82810360408401526121d5818961215b565b6060840188905273ffffffffffffffffffffffffffffffffffffffff8716608085015260a0840186905283810360c0850152845180825260208087019350909101905f5b81811015612237578351835260209384019390920191600101612219565b50909b9a5050505050505050505050565b5f5f5f5f6060858703121561225b575f5ffd5b843561226681611e2b565b935060208501359250604085013567ffffffffffffffff811115612288575f5ffd5b611fe887828801611e4c565b5f5f5f5f5f5f5f5f60a0898b0312156122ab575f5ffd5b88356122b681611e2b565b975060208901356122c681611e2b565b9650604089013567ffffffffffffffff8111156122e1575f5ffd5b6122ed8b828c01611f47565b909750955050606089013567ffffffffffffffff81111561230c575f5ffd5b6123188b828c01611f47565b909550935050608089013567ffffffffffffffff811115612337575f5ffd5b6123438b828c01611e4c565b999c989b5096995094979396929594505050565b5f60208284031215612367575f5ffd5b813561063381611e2b565b5f5f5f5f5f5f60a08789031215612387575f5ffd5b863561239281611e2b565b955060208701356123a281611e2b565b94506040870135935060608701359250608087013567ffffffffffffffff8111156123cb575f5ffd5b6120d089828a01611e4c565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f5f83357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112612437575f5ffd5b83018035915067ffffffffffffffff821115612451575f5ffd5b602001915036819003821315611e8a575f5ffd5b5f60208284031215612475575f5ffd5b5051919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffd5b5f5f858511156124b7575f5ffd5b838611156124c3575f5ffd5b5050820193919092039150565b828152604060208201525f6124e8604083018461215b565b949350505050565b5f82518060208501845e5f92019182525091905056fea2646970667358221220bfa34607ae2d21f3ddbc7e693e762987f39f5972eeb055f91e952c989647117e64736f6c634300081c0033",
    "sourceMap": "1209:7704:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1231:298:180;;;;;;;;;;-1:-1:-1;1231:298:180;;;;;:::i;:::-;;:::i;:::-;;;516:14:231;;509:22;491:41;;479:2;464:18;1231:298:180;;;;;;;;630:217:13;;;;;;;;;;-1:-1:-1;630:217:13;;;;;:::i;:::-;;:::i;:::-;;;1945:25:231;;;1933:2;1918:18;630:217:13;1799:177:231;505:212:180;;;;;;;;;;-1:-1:-1;505:212:180;;;;;:::i;:::-;669:41;505:212;;;;;;;;;;;3477:66:231;3465:79;;;3447:98;;3435:2;3420:18;505:212:180;3303:248:231;1257:286:13;;;;;;;;;;-1:-1:-1;1257:286:13;;;;;:::i;:::-;;:::i;2088:389:9:-;;;;;;;;;;-1:-1:-1;2088:389:9;;;;;:::i;:::-;;:::i;:::-;;1139:385:165;;;;;;;;;;-1:-1:-1;1139:385:165;;;;;:::i;:::-;;:::i;2894:453:9:-;;;;;;;;;;-1:-1:-1;2894:453:9;;;;;:::i;:::-;;:::i;5172:580::-;;;;;;:::i;:::-;;:::i;:::-;;;8000:42:231;7988:55;;;7970:74;;7958:2;7943:18;5172:580:9;7824:226:231;5830:111:9;;;:::i;3907:558::-;;;;;;:::i;:::-;;:::i;6098:264::-;;;;;;;;;;-1:-1:-1;6098:264:9;;;;;:::i;:::-;;:::i;6989:596:12:-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;3916:90:1:-;;;;;;;;;;-1:-1:-1;1530:66:1;3980:19;;;3916:90;;6632:109:9;;;;;;;;;;-1:-1:-1;6722:12:9;6632:109;;1593:155;;;;;;;;;;-1:-1:-1;1593:155:9;;;;;:::i;:::-;;:::i;961:264:180:-;;;;;;;;;;-1:-1:-1;961:264:180;;;;;:::i;:::-;1170:48;961:264;;;;;;;;;;;6479:115:9;;;;;;;;;;;;;:::i;3224:101:1:-;;;;;;;;;;-1:-1:-1;3224:101:1;;;;;:::i;:::-;;:::i;771:121:165:-;;;;;;;;;;;;;:::i;723:232:180:-;;;;;;;;;;-1:-1:-1;723:232:180;;;;;:::i;:::-;905:43;723:232;;;;;;;;;3575:242:1;;;;;;;;;;-1:-1:-1;3575:242:1;;;;;:::i;:::-;;:::i;1231:298:180:-;1318:4;1353:48;;;1368:33;1353:48;;:113;;-1:-1:-1;1417:49:180;;;1432:34;1417:49;1353:113;:169;;;-1:-1:-1;1482:40:180;;;1497:25;1482:40;1353:169;1334:188;1231:298;-1:-1:-1;;1231:298:180:o;630:217:13:-;697:7;716:18;388:47;787:7;777:18;;;;;;747:49;;;;;;;;14268:25:231;;;14324:2;14309:18;;14302:34;14256:2;14241:18;;14094:248;747:49:13;;;;;;;;;;;;;737:60;;;;;;716:81;;814:26;829:10;814:14;:26::i;:::-;807:33;630:217;-1:-1:-1;;;630:217:13:o;1257:286::-;1352:6;1374:62;1392:32;1418:4;1407:16;;;;;;1945:25:231;;1933:2;1918:18;;1799:177;1407:16:13;;;;;;;;;;;;;1392:14;:32::i;:::-;1426:9;;1374:17;:62::i;:::-;1370:125;;;-1:-1:-1;1459:25:13;1452:32;;1370:125;-1:-1:-1;1511:25:13;1257:286;;;;;:::o;2088:389:9:-;1142:17;:15;:17::i;:::-;871:1:14::1;851:18;844:29:::0;2255:26:9;;::::2;2251:85;;2304:21;;;;;;;;;;;;;;2251:85;2362:4:::0;2345:14:::2;2383:88;2407:6;2403:1;:10;2383:88;;;2434:26;2440:4;;2445:1;2440:7;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;2449:1;2452:4;;2457:1;2452:7;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;2434:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;::::0;;;;-1:-1:-1;2434:5:9::2;::::0;-1:-1:-1;;;2434:26:9:i:2;:::-;2415:3;;2383:88;;;;2241:236;953:1:14::1;933:18;926:29;2088:389:9::0;;;;:::o;1139:385:165:-;1314:22;1348:24;:22;:24::i;:::-;1399:38;1418:6;1426:10;1399:18;:38::i;:::-;1382:55;;1485:32;1497:19;1485:11;:32::i;2894:453:9:-;1142:17;:15;:17::i;:::-;871:1:14::1;851:18;844:29:::0;3087:26:9;;::::2;;::::0;:57:::2;;-1:-1:-1::0;3117:27:9;;::::2;;3087:57;3083:116;;;3167:21;;;;;;;;;;;;;;3083:116;3225:4:::0;3208:14:::2;3246:95;3270:6;3266:1;:10;3246:95;;;3297:33;3303:4;;3308:1;3303:7;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;3312:5;;3318:1;3312:8;;;;;;;:::i;:::-;;;;;;;3322:4;;3327:1;3322:7;;;;;;;:::i;3297:33::-;3278:3;;3246:95;;;;3073:274;953:1:14::1;933:18;926:29;2894:453:9::0;;;;;;:::o;5172:580::-;5362:19;1142:17;:15;:17::i;:::-;871:1:14::1;851:18;844:29;5453:4:9::2;5447:11;5482:15;5545:3;5528:15;5523:3;5510:39;5603:4;5598:3;5593;5586:5;5578:30;5563:45;;;;5632:11;5622:114;;5676:10;5670:4;5663:24;5717:4;5711;5704:18;5622:114;953:1:14::1;933:18;926:29;5172:580:9::0;;;;;;:::o;5830:111::-;6722:12;5879:55;;;;;5928:4;5879:55;;;7970:74:231;5879:22:9;;;;;;;;5909:9;;7943:18:231;;5879:55:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5830:111::o;3907:558::-;4082:19;1142:17;:15;:17::i;:::-;871:1:14::1;851:18;844:29;4173:4:9::2;4167:11;4202:15;4265:3;4248:15;4243:3;4230:39;4317:3;4312;4305:5;4298:23;4283:38;;;;4345:11;4335:114;;4389:10;4383:4;4376:24;4430:4;4424;4417:18;4335:114;953:1:14::1;933:18;926:29;3907:558:9::0;;;;;:::o;6098:264::-;1142:17;:15;:17::i;:::-;6212:29:::1;::::0;::::1;6208:90;;6264:23;;;;;;;;;;;;;;6208:90;6722:12:::0;6307:48:::1;::::0;;;;:23:::1;15329:55:231::0;;;6307:48:9::1;::::0;::::1;15311:74:231::0;15401:18;;;15394:34;;;6307:23:9;;;::::1;::::0;::::1;::::0;15284:18:231;;6307:48:9::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6098:264:::0;;:::o;6989:596:12:-;7327:16;7114:18;;7087:13;;;7114:18;7385:23;8405:21:1;;;;;;;;;;;;;;;;;;;;8534:13;;;;;;;;;;;;;;;;8405:21;8235:319;7385:23:12;6989:596;;7367:41;;;-1:-1:-1;7428:13:12;;-1:-1:-1;7479:4:12;;-1:-1:-1;6989:596:12;;-1:-1:-1;6989:596:12;:::o;1593:155:9:-;1142:17;:15;:17::i;:::-;871:1:14::1;851:18;844:29;1717:24:9::2;1723:4;1729:5;1736:4;;1717:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;::::0;;;;-1:-1:-1;1717:5:9::2;::::0;-1:-1:-1;;;1717:24:9:i:2;:::-;953:1:14::1;933:18;926:29;1593:155:9::0;;;;:::o;6479:115::-;6550:37;;;;;6581:4;6550:37;;;7970:74:231;6524:7:9;;6550:22;6722:12;6550:22;;;;7943:18:231;;6550:37:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6543:44;;6479:115;:::o;3224:101:1:-;8234:16:11;3851:21;;;;;;;3850:22;;3903:20;;3690:47;4287:16;;:34;;;;;4307:14;4287:34;4267:54;;4331:17;4351:11;:16;;4366:1;4351:16;:50;;;;-1:-1:-1;4379:4:11;4371:25;:30;4351:50;4331:70;;4417:12;4416:13;:30;;;;;4434:12;4433:13;4416:30;4412:91;;;4469:23;;;;;;;;;;;;;;4412:91;4512:24;;;;4535:1;4512:24;;;4546:73;;;;4580:28;;;;;;;;4546:73;3299:19:1::1;3311:6;3299:11;:19::i;:::-;4643:14:11::0;4639:107;;;4673:29;;;;;;4721:14;;-1:-1:-1;15781:50:231;;4721:14:11;;15769:2:231;15754:18;4721:14:11;;;;;;;3680:1072;;;;;3224:101:1;:::o;771:121:165:-;846:39;;;;;876:4;846:39;;;16024:74:231;820:7:165;16114:18:231;;;16107:91;;;820:7:165;846:21;6722:12:9;846:21:165;;;;15997:18:231;;846:39:165;15842:362:231;3575:242:1;1142:17:9;:15;:17::i;:::-;3666:22:1::1;::::0;::::1;::::0;;:51:::1;;-1:-1:-1::0;3692:25:1::1;::::0;::::1;3712:4;3692:25;3666:51;3662:111;;;3740:22;::::0;::::1;::::0;;8000:42:231;7988:55;;3740:22:1::1;::::0;::::1;7970:74:231::0;7943:18;;3740:22:1::1;;;;;;;;3662:111;3782:28;3801:8;3782:18;:28::i;:::-;3575:242:::0;:::o;5757:885:12:-;6066:22;9114:11;9255:9;9252:25;9069:14;9225:9;9222:28;9218:60;6102:73;;-1:-1:-1;8545:4:12;8539:11;;8606:16;8596:27;;8383:15;8650:4;8643:12;;8636:31;8426:18;8701:12;;;8694:33;;;;8761:9;8754:4;8747:12;;8740:31;8805:9;8798:4;8791:12;;8784:31;8854:4;8841:18;;6102:73;6309:18;6303:4;6296:32;6375:6;6369:4;6362:20;6439:10;6433:4;6426:24;6515:4;6509;6499:21;6489:31;;6624:1;6618:4;6611:15;5757:885;;;:::o;7499:730:1:-;7656:4;7699:1;7680:20;;7676:80;;;7723:22;;;;;;;;;;;;;;7676:80;7765:19;7793:9;;7803:1;7793:12;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;7793:12:1;;-1:-1:-1;7816:368:1;;7913:56;7939:14;7955:13;:9;7965:1;7955:9;;:13;:::i;:::-;7913:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7913:25:1;;-1:-1:-1;;;7913:56:1:i;:::-;7906:63;;;;;7816:368;7990:46;;;;;7986:198;;8109:64;8143:14;8159:13;:9;8169:1;8159:9;;:13;:::i;:::-;8109:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8109:33:1;;-1:-1:-1;;;8109:64:1:i;7986:198::-;8200:22;;;;;;;;;;;;;;7048:205:9;7103:10;:35;6722:12;7103:35;;;;;:66;;-1:-1:-1;7142:10:9;7164:4;7142:27;;7103:66;:85;;;;;7174:14;:12;:14::i;:::-;7173:15;7103:85;7099:148;;;7211:25;;;;;7225:10;7211:25;;;7970:74:231;7943:18;;7211:25:9;7824:226:231;7099:148:9;7048:205::o;8300:406::-;8498:1;8492:4;8485;8479:11;8472:4;8466;8462:15;8455:5;8447:6;8440:5;8435:65;8524:4;8514:176;;8565:4;8559:11;8613:16;8607:4;8602:3;8587:43;8659:16;8654:3;8647:29;8514:176;;8300:406;;;:::o;1605:183:165:-;1692:10;:35;6722:12:9;1692:35:165;;1671:110;;;;;;;16936:2:231;1671:110:165;;;16918:21:231;16975:2;16955:18;;;16948:30;17014;16994:18;;;16987:58;17062:18;;1671:110:165;16734:352:231;4962:981:1;5114:22;5182:1;5156:16;;;;:6;:16;:::i;:::-;:23;;:27;5152:87;;;5206:22;;;;;;;;;;;;;;5152:87;5248:19;5276:16;;;;:6;:16;:::i;:::-;5293:1;5276:19;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;5276:19:1;;-1:-1:-1;5306:592:1;;1401:34:215;5396:18:1;1388:48:215;;;1497:4;1490:25;;;1595:4;1579:21;;;5491:16:1;;;;;;:::i;:::-;:20;;5508:1;;5491:20;;;:::i;:::-;5466:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5466:45:1;;-1:-1:-1;5532:74:1;;-1:-1:-1;5557:48:1;;-1:-1:-1;5583:10:1;;-1:-1:-1;5466:45:1;5557:25;:48::i;:::-;5532:24;:74::i;:::-;5525:81;;;;;;;5306:592;5627:46;;;;;5623:275;;5739:22;5764:16;;;;:6;:16;:::i;:::-;:20;;5781:1;;5764:20;;;:::i;:::-;5739:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5739:45:1;;-1:-1:-1;5805:82:1;;-1:-1:-1;5830:56:1;;-1:-1:-1;5864:10:1;;-1:-1:-1;5739:45:1;5830:33;:56::i;5805:82::-;5798:89;4962:981;-1:-1:-1;;;;;4962:981:1:o;4356:382:165:-;4437:24;;4433:299;;4496:126;;4478:12;;4504:10;;4587:17;;4545:19;;4478:12;4496:126;4478:12;4496:126;4545:19;4504:10;4587:17;4496:126;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4012:305:1;4080:20;;;4076:82;;4123:24;;;;;4144:1;4123:24;;;7970:74:231;7943:18;;4123:24:1;7824:226:231;4076:82:1;4189:6;1530:66;4167:28;;;;;;;;;;;4210:45;;;;;;4234:12;4210:45;;;;-1:-1:-1;;4210:45:1;4270:40;;;;;;4299:1;;4270:40;;4299:1;;4270:40;4012:305;:::o;4323:354::-;1530:66;4477:14;;;;;;;4505:20;;;;;4501:80;;4548:22;;;;;8000:42:231;7988:55;;4548:22:1;;;7970:74:231;7943:18;;4548:22:1;7824:226:231;4501:80:1;4590:25;;;;;;;;;;;;;4630:40;;;;;;;;-1:-1:-1;;4630:40:1;4386:291;;4323:354;:::o;6338:203::-;6436:4;;6472:25;:6;6487:9;6472:14;:25::i;:::-;6452:45;;6527:7;1530:66;3980:19;;;;3916:90;6527:7;6514:20;;;;;;;;6338:203;-1:-1:-1;;;6338:203:1:o;6841:207::-;6947:4;6970:71;7014:7;1530:66;3980:19;;;;3916:90;7014:7;7023:6;7031:9;6970:43;:71::i;8560:115::-;8624:4;8661:7;1530:66;3980:19;;;;3916:90;8661:7;8647:21;;:10;:21;;;8640:28;;8560:115;:::o;7525:175:9:-;7596:22;7637:7;:56;;305:1:167;7637:56:9;;;465:1:167;7630:63:9;7525:175;-1:-1:-1;;7525:175:9:o;3714:255:214:-;3792:7;3812:17;3831:18;3851:16;3871:27;3882:4;3888:9;3871:10;:27::i;:::-;3811:87;;;;;;3908:28;3920:5;3927:8;3908:11;:28::i;:::-;-1:-1:-1;3953:9:214;;3714:255;-1:-1:-1;;;;3714:255:214:o;1877:458:216:-;2020:4;2037:12;2051:19;2074:6;:17;;2148:4;2154:9;2105:60;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;2105:60:216;;;;;;;;;;;;;;;;;;;;2074:101;;;2105:60;2074:101;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2036:139;;;;2193:7;:42;;;;;2233:2;2216:6;:13;:19;;2193:42;:134;;;;-1:-1:-1;2251:29:216;;2292:34;;2251:29;;;;;;;;;;;;:::i;:::-;:76;2193:134;2185:143;1877:458;-1:-1:-1;;;;;;1877:458:216:o;2129:778:214:-;2232:17;2251:16;2269:14;2299:9;:16;2319:2;2299:22;2295:606;;2604:4;2589:20;;2583:27;2653:4;2638:20;;2632:27;2710:4;2695:20;;2689:27;2337:9;2681:36;2751:25;2762:4;2681:36;2583:27;2632;2751:10;:25::i;:::-;2744:32;;;;;;;;;;;2295:606;-1:-1:-1;;2872:16:214;;2823:1;;-1:-1:-1;2827:35:214;;2295:606;2129:778;;;;;:::o;7280:532::-;7375:20;7366:5;:29;;;;;;;;:::i;:::-;;7362:444;;7280:532;;:::o;7362:444::-;7471:29;7462:5;:38;;;;;;;;:::i;:::-;;7458:348;;7523:23;;;;;;;;;;;;;;7458:348;7576:35;7567:5;:44;;;;;;;;:::i;:::-;;7563:243;;7634:46;;;;;;;;1945:25:231;;;1918:18;;7634:46:214;1799:177:231;7563:243:214;7710:30;7701:5;:39;;;;;;;;:::i;:::-;;7697:109;;7763:32;;;;;;;;1945:25:231;;;1918:18;;7763:32:214;1799:177:231;7697:109:214;7280:532;;:::o;5203:1551::-;5329:17;;;6283:66;6270:79;;6266:164;;;-1:-1:-1;6381:1:214;;-1:-1:-1;6385:30:214;;-1:-1:-1;6417:1:214;6365:54;;6266:164;6541:24;;;6524:14;6541:24;;;;;;;;;18317:25:231;;;18390:4;18378:17;;18358:18;;;18351:45;;;;18412:18;;;18405:34;;;18455:18;;;18448:34;;;6541:24:214;;18289:19:231;;6541:24:214;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6541:24:214;;-1:-1:-1;;6541:24:214;;;-1:-1:-1;;6579:20:214;;;6575:113;;-1:-1:-1;6631:1:214;;-1:-1:-1;6635:29:214;;-1:-1:-1;6631:1:214;;-1:-1:-1;6615:62:214;;6575:113;6706:6;-1:-1:-1;6714:20:214;;-1:-1:-1;6714:20:214;;-1:-1:-1;5203:1551:214;;;;;;;;;:::o;14:332:231:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;180:9;167:23;230:66;223:5;219:78;212:5;209:89;199:117;;312:1;309;302:12;543:184;595:77;592:1;585:88;692:4;689:1;682:15;716:4;713:1;706:15;732:1062;800:6;853:2;841:9;832:7;828:23;824:32;821:52;;;869:1;866;859:12;821:52;909:9;896:23;942:18;934:6;931:30;928:50;;;974:1;971;964:12;928:50;997:22;;1050:4;1042:13;;1038:27;-1:-1:-1;1028:55:231;;1079:1;1076;1069:12;1028:55;1119:2;1106:16;1145:18;1137:6;1134:30;1131:56;;;1167:18;;:::i;:::-;1216:2;1210:9;-1:-1:-1;;1358:2:231;-1:-1:-1;;1282:4:231;1274:6;1270:17;1266:90;1262:99;1258:172;1250:6;1246:185;1497:6;1485:10;1482:22;1461:18;1449:10;1446:34;1443:62;1440:88;;;1508:18;;:::i;:::-;1544:2;1537:22;1568;;;1609:15;;;1626:2;1605:24;1602:37;-1:-1:-1;1599:57:231;;;1652:1;1649;1642:12;1599:57;1708:6;1703:2;1699;1695:11;1690:2;1682:6;1678:15;1665:50;1761:1;1735:19;;;1756:2;1731:28;1724:39;;;;1739:6;732:1062;-1:-1:-1;;;;732:1062:231:o;1981:154::-;2067:42;2060:5;2056:54;2049:5;2046:65;2036:93;;2125:1;2122;2115:12;2140:347;2191:8;2201:6;2255:3;2248:4;2240:6;2236:17;2232:27;2222:55;;2273:1;2270;2263:12;2222:55;-1:-1:-1;2296:20:231;;2339:18;2328:30;;2325:50;;;2371:1;2368;2361:12;2325:50;2408:4;2400:6;2396:17;2384:29;;2460:3;2453:4;2444:6;2436;2432:19;2428:30;2425:39;2422:59;;;2477:1;2474;2467:12;2422:59;2140:347;;;;;:::o;2492:806::-;2589:6;2597;2605;2613;2621;2674:3;2662:9;2653:7;2649:23;2645:33;2642:53;;;2691:1;2688;2681:12;2642:53;2730:9;2717:23;2749:31;2774:5;2749:31;:::i;:::-;2799:5;-1:-1:-1;2856:2:231;2841:18;;2828:32;2869:33;2828:32;2869:33;:::i;:::-;2921:7;-1:-1:-1;3001:2:231;2986:18;;2973:32;;-1:-1:-1;3082:2:231;3067:18;;3054:32;3109:18;3098:30;;3095:50;;;3141:1;3138;3131:12;3095:50;3180:58;3230:7;3221:6;3210:9;3206:22;3180:58;:::i;:::-;2492:806;;;;-1:-1:-1;2492:806:231;;-1:-1:-1;3257:8:231;;3154:84;2492:806;-1:-1:-1;;;2492:806:231:o;3556:523::-;3635:6;3643;3651;3704:2;3692:9;3683:7;3679:23;3675:32;3672:52;;;3720:1;3717;3710:12;3672:52;3765:23;;;-1:-1:-1;3863:2:231;3848:18;;3835:32;3890:18;3879:30;;3876:50;;;3922:1;3919;3912:12;3876:50;3961:58;4011:7;4002:6;3991:9;3987:22;3961:58;:::i;:::-;3556:523;;4038:8;;-1:-1:-1;3935:84:231;;-1:-1:-1;;;;3556:523:231:o;4084:367::-;4147:8;4157:6;4211:3;4204:4;4196:6;4192:17;4188:27;4178:55;;4229:1;4226;4219:12;4178:55;-1:-1:-1;4252:20:231;;4295:18;4284:30;;4281:50;;;4327:1;4324;4317:12;4281:50;4364:4;4356:6;4352:17;4340:29;;4424:3;4417:4;4407:6;4404:1;4400:14;4392:6;4388:27;4384:38;4381:47;4378:67;;;4441:1;4438;4431:12;4456:779;4589:6;4597;4605;4613;4666:2;4654:9;4645:7;4641:23;4637:32;4634:52;;;4682:1;4679;4672:12;4634:52;4722:9;4709:23;4755:18;4747:6;4744:30;4741:50;;;4787:1;4784;4777:12;4741:50;4826:70;4888:7;4879:6;4868:9;4864:22;4826:70;:::i;:::-;4915:8;;-1:-1:-1;4800:96:231;-1:-1:-1;;5003:2:231;4988:18;;4975:32;5032:18;5019:32;;5016:52;;;5064:1;5061;5054:12;5016:52;5103:72;5167:7;5156:8;5145:9;5141:24;5103:72;:::i;:::-;4456:779;;;;-1:-1:-1;5194:8:231;-1:-1:-1;;;;4456:779:231:o;5240:634::-;5357:6;5365;5373;5426:2;5414:9;5405:7;5401:23;5397:32;5394:52;;;5442:1;5439;5432:12;5394:52;5482:9;5469:23;5515:18;5507:6;5504:30;5501:50;;;5547:1;5544;5537:12;5501:50;5570:22;;5626:3;5608:16;;;5604:26;5601:46;;;5643:1;5640;5633:12;5601:46;5666:2;5737;5722:18;;5709:32;;-1:-1:-1;5838:2:231;5823:18;;;5810:32;;5240:634;-1:-1:-1;;;5240:634:231:o;6061:1110::-;6230:6;6238;6246;6254;6262;6270;6323:2;6311:9;6302:7;6298:23;6294:32;6291:52;;;6339:1;6336;6329:12;6291:52;6379:9;6366:23;6412:18;6404:6;6401:30;6398:50;;;6444:1;6441;6434:12;6398:50;6483:70;6545:7;6536:6;6525:9;6521:22;6483:70;:::i;:::-;6572:8;;-1:-1:-1;6457:96:231;-1:-1:-1;;6660:2:231;6645:18;;6632:32;6689:18;6676:32;;6673:52;;;6721:1;6718;6711:12;6673:52;6760:72;6824:7;6813:8;6802:9;6798:24;6760:72;:::i;:::-;6851:8;;-1:-1:-1;6734:98:231;-1:-1:-1;;6939:2:231;6924:18;;6911:32;6968:18;6955:32;;6952:52;;;7000:1;6997;6990:12;6952:52;7039:72;7103:7;7092:8;7081:9;7077:24;7039:72;:::i;:::-;6061:1110;;;;-1:-1:-1;6061:1110:231;;-1:-1:-1;6061:1110:231;;7130:8;;6061:1110;-1:-1:-1;;;6061:1110:231:o;7176:643::-;7264:6;7272;7280;7288;7341:2;7329:9;7320:7;7316:23;7312:32;7309:52;;;7357:1;7354;7347:12;7309:52;7402:23;;;-1:-1:-1;7500:2:231;7485:18;;7472:32;7527:18;7516:30;;7513:50;;;7559:1;7556;7549:12;7513:50;7598:58;7648:7;7639:6;7628:9;7624:22;7598:58;:::i;:::-;7176:643;;7675:8;;-1:-1:-1;7572:84:231;;7783:2;7768:18;7755:32;;7176:643;-1:-1:-1;;;;7176:643:231:o;8583:375::-;8659:6;8667;8720:2;8708:9;8699:7;8695:23;8691:32;8688:52;;;8736:1;8733;8726:12;8688:52;8775:9;8762:23;8794:31;8819:5;8794:31;:::i;:::-;8844:5;8922:2;8907:18;;;;8894:32;;-1:-1:-1;;;8583:375:231:o;8963:348::-;9005:3;9043:5;9037:12;9070:6;9065:3;9058:19;9126:6;9119:4;9112:5;9108:16;9101:4;9096:3;9092:14;9086:47;9178:1;9171:4;9162:6;9157:3;9153:16;9149:27;9142:38;9300:4;-1:-1:-1;;9225:2:231;9217:6;9213:15;9209:88;9204:3;9200:98;9196:109;9189:116;;;8963:348;;;;:::o;9316:1314::-;9713:66;9705:6;9701:79;9690:9;9683:98;9817:3;9812:2;9801:9;9797:18;9790:31;9664:4;9844:46;9885:3;9874:9;9870:19;9862:6;9844:46;:::i;:::-;9938:9;9930:6;9926:22;9921:2;9910:9;9906:18;9899:50;9972:33;9998:6;9990;9972:33;:::i;:::-;10036:2;10021:18;;10014:34;;;10097:42;10085:55;;10079:3;10064:19;;10057:84;10172:3;10157:19;;10150:35;;;10222:22;;;10216:3;10201:19;;10194:51;10294:13;;10316:22;;;10366:2;10392:15;;;;-1:-1:-1;10354:15:231;;;;-1:-1:-1;10435:169:231;10449:6;10446:1;10443:13;10435:169;;;10510:13;;10498:26;;10553:2;10579:15;;;;10544:12;;;;10471:1;10464:9;10435:169;;;-1:-1:-1;10621:3:231;;9316:1314;-1:-1:-1;;;;;;;;;;;9316:1314:231:o;10887:664::-;10975:6;10983;10991;10999;11052:2;11040:9;11031:7;11027:23;11023:32;11020:52;;;11068:1;11065;11058:12;11020:52;11107:9;11094:23;11126:31;11151:5;11126:31;:::i;:::-;11176:5;-1:-1:-1;11254:2:231;11239:18;;11226:32;;-1:-1:-1;11335:2:231;11320:18;;11307:32;11362:18;11351:30;;11348:50;;;11394:1;11391;11384:12;11348:50;11433:58;11483:7;11474:6;11463:9;11459:22;11433:58;:::i;11556:1349::-;11716:6;11724;11732;11740;11748;11756;11764;11772;11825:3;11813:9;11804:7;11800:23;11796:33;11793:53;;;11842:1;11839;11832:12;11793:53;11881:9;11868:23;11900:31;11925:5;11900:31;:::i;:::-;11950:5;-1:-1:-1;12007:2:231;11992:18;;11979:32;12020:33;11979:32;12020:33;:::i;:::-;12072:7;-1:-1:-1;12130:2:231;12115:18;;12102:32;12157:18;12146:30;;12143:50;;;12189:1;12186;12179:12;12143:50;12228:70;12290:7;12281:6;12270:9;12266:22;12228:70;:::i;:::-;12317:8;;-1:-1:-1;12202:96:231;-1:-1:-1;;12405:2:231;12390:18;;12377:32;12434:18;12421:32;;12418:52;;;12466:1;12463;12456:12;12418:52;12505:72;12569:7;12558:8;12547:9;12543:24;12505:72;:::i;:::-;12596:8;;-1:-1:-1;12479:98:231;-1:-1:-1;;12684:3:231;12669:19;;12656:33;12714:18;12701:32;;12698:52;;;12746:1;12743;12736:12;12698:52;12785:60;12837:7;12826:8;12815:9;12811:24;12785:60;:::i;:::-;11556:1349;;;;-1:-1:-1;11556:1349:231;;-1:-1:-1;11556:1349:231;;;;;;12864:8;-1:-1:-1;;;11556:1349:231:o;12910:247::-;12969:6;13022:2;13010:9;13001:7;12997:23;12993:32;12990:52;;;13038:1;13035;13028:12;12990:52;13077:9;13064:23;13096:31;13121:5;13096:31;:::i;13162:927::-;13268:6;13276;13284;13292;13300;13308;13361:3;13349:9;13340:7;13336:23;13332:33;13329:53;;;13378:1;13375;13368:12;13329:53;13417:9;13404:23;13436:31;13461:5;13436:31;:::i;:::-;13486:5;-1:-1:-1;13543:2:231;13528:18;;13515:32;13556:33;13515:32;13556:33;:::i;:::-;13608:7;-1:-1:-1;13688:2:231;13673:18;;13660:32;;-1:-1:-1;13791:2:231;13776:18;;13763:32;;-1:-1:-1;13872:3:231;13857:19;;13844:33;13900:18;13889:30;;13886:50;;;13932:1;13929;13922:12;13886:50;13971:58;14021:7;14012:6;14001:9;13997:22;13971:58;:::i;14347:184::-;14399:77;14396:1;14389:88;14496:4;14493:1;14486:15;14520:4;14517:1;14510:15;14536:580;14613:4;14619:6;14679:11;14666:25;14769:66;14758:8;14742:14;14738:29;14734:102;14714:18;14710:127;14700:155;;14851:1;14848;14841:12;14700:155;14878:33;;14930:20;;;-1:-1:-1;14973:18:231;14962:30;;14959:50;;;15005:1;15002;14995:12;14959:50;15038:4;15026:17;;-1:-1:-1;15069:14:231;15065:27;;;15055:38;;15052:58;;;15106:1;15103;15096:12;15439:184;15509:6;15562:2;15550:9;15541:7;15537:23;15533:32;15530:52;;;15578:1;15575;15568:12;15530:52;-1:-1:-1;15601:16:231;;15439:184;-1:-1:-1;15439:184:231:o;16209:::-;16261:77;16258:1;16251:88;16358:4;16355:1;16348:15;16382:4;16379:1;16372:15;16398:331;16503:9;16514;16556:8;16544:10;16541:24;16538:44;;;16578:1;16575;16568:12;16538:44;16607:6;16597:8;16594:20;16591:40;;;16627:1;16624;16617:12;16591:40;-1:-1:-1;;16653:23:231;;;16698:25;;;;;-1:-1:-1;16398:331:231:o;17301:289::-;17476:6;17465:9;17458:25;17519:2;17514;17503:9;17499:18;17492:30;17439:4;17539:45;17580:2;17569:9;17565:18;17557:6;17539:45;:::i;:::-;17531:53;17301:289;-1:-1:-1;;;;17301:289:231:o;17595:301::-;17724:3;17762:6;17756:13;17808:6;17801:4;17793:6;17789:17;17784:3;17778:37;17870:1;17834:16;;17859:13;;;-1:-1:-1;17834:16:231;17595:301;-1:-1:-1;17595:301:231:o",
    "linkReferences": {},
    "immutableReferences": {
      "2379": [
        {
          "start": 948,
          "length": 32
        },
        {
          "start": 2452,
          "length": 32
        },
        {
          "start": 2821,
          "length": 32
        },
        {
          "start": 3376,
          "length": 32
        },
        {
          "start": 3944,
          "length": 32
        },
        {
          "start": 4797,
          "length": 32
        },
        {
          "start": 4977,
          "length": 32
        },
        {
          "start": 5834,
          "length": 32
        }
      ],
      "2912": [
        {
          "start": 3489,
          "length": 32
        }
      ],
      "3181": [
        {
          "start": 4186,
          "length": 32
        }
      ],
      "3183": [
        {
          "start": 4221,
          "length": 32
        }
      ],
      "3185": [
        {
          "start": 4301,
          "length": 32
        }
      ],
      "3187": [
        {
          "start": 4339,
          "length": 32
        }
      ],
      "3189": [
        {
          "start": 4153,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "addDeposit()": "4a58db19",
    "eip712Domain()": "84b0196e",
    "entryPoint()": "b0d691fe",
    "execute(address,uint256,bytes)": "b61d27f6",
    "executeBatch(address[],bytes[])": "18dfb3c7",
    "executeBatch(address[],uint256[],bytes[])": "47e1da2a",
    "getDeposit()": "c399ec88",
    "getMessageHash(bytes)": "0a1028c4",
    "getNonce()": "d087d288",
    "initialize(address)": "c4d66de8",
    "isValidSignature(bytes32,bytes)": "1626ba7e",
    "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
    "onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
    "onERC721Received(address,address,uint256,bytes)": "150b7a02",
    "owner()": "8da5cb5b",
    "performCreate(uint256,bytes)": "4c8c9ea1",
    "performCreate2(uint256,bytes,bytes32)": "4847be6f",
    "supportsInterface(bytes4)": "01ffc9a7",
    "transferOwnership(address)": "f2fde38b",
    "validateUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)": "19822f7c",
    "withdrawDepositTo(address,uint256)": "4d44560d"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IEntryPoint\",\"name\":\"entryPoint_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ArrayLengthMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CreateFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"InvalidOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSignatureType\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Locked\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"NotAuthorized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroAddressNotAllowed\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IEntryPoint\",\"name\":\"entryPoint\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"LightAccountInitialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"addDeposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"entryPoint\",\"outputs\":[{\"internalType\":\"contract IEntryPoint\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"dest\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"func\",\"type\":\"bytes\"}],\"name\":\"execute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"dest\",\"type\":\"address[]\"},{\"internalType\":\"bytes[]\",\"name\":\"func\",\"type\":\"bytes[]\"}],\"name\":\"executeBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"dest\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"value\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes[]\",\"name\":\"func\",\"type\":\"bytes[]\"}],\"name\":\"executeBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"}],\"name\":\"getMessageHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner_\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"isValidSignature\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"}],\"name\":\"performCreate\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"createdAddr\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"name\":\"performCreate2\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"createdAddr\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"accountGasLimits\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"gasFees\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct PackedUserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"missingAccountFunds\",\"type\":\"uint256\"}],\"name\":\"validateUserOp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"validationData\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawDepositTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"Edited Alchemy `LightAccount` version, but with the following changes: 1. Remove UUPSUpgradable pattern and use the BeaconProxy pattern instead 2. Add `ExecutionLock` to `execute`, `executeBatch` adn `create` functions that enable an unlock flag 3. Add explicit flash loan receiver callbacks that are only accesible if the unlock flag is accordingly set\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"InvalidOwner(address)\":[{\"details\":\"The new owner is not a valid owner (e.g., `address(0)`, the account itself, or the current owner).\"}],\"Locked()\":[{\"details\":\"custom error for violating lok condition\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"LightAccountInitialized(address,address)\":{\"params\":{\"entryPoint\":\"The entry point.\",\"owner\":\"The initial owner.\"}},\"OwnershipTransferred(address,address)\":{\"params\":{\"newOwner\":\"The new owner.\",\"previousOwner\":\"The previous owner.\"}}},\"kind\":\"dev\",\"methods\":{\"eip712Domain()\":{\"details\":\"See: https://eips.ethereum.org/EIPS/eip-5267\"},\"execute(address,uint256,bytes)\":{\"params\":{\"dest\":\"The target of the transaction.\",\"func\":\"The transaction's calldata.\",\"value\":\"The amount of wei sent in the transaction.\"}},\"executeBatch(address[],bytes[])\":{\"params\":{\"dest\":\"An array of the targets for each transaction in the sequence.\",\"func\":\"An array of calldata for each transaction in the sequence. Must be the same length as `dest`, with corresponding elements representing the parameters for each transaction.\"}},\"executeBatch(address[],uint256[],bytes[])\":{\"params\":{\"dest\":\"An array of the targets for each transaction in the sequence.\",\"func\":\"An array of calldata for each transaction in the sequence. Must be the same length as `dest`, with corresponding elements representing the parameters for each transaction.\",\"value\":\"An array of value for each transaction in the sequence.\"}},\"getDeposit()\":{\"returns\":{\"_0\":\"The current account deposit.\"}},\"getMessageHash(bytes)\":{\"params\":{\"message\":\"Message that should be hashed.\"},\"returns\":{\"_0\":\"The replay-safe message hash.\"}},\"initialize(address)\":{\"details\":\"The `_ENTRY_POINT` member is immutable, to reduce gas consumption. To update the entry point address, a new implementation of LightAccount must be deployed with the new entry point address, and then `upgradeToAndCall` must be called to upgrade the implementation.\",\"params\":{\"owner_\":\"The initial owner of the account.\"}},\"isValidSignature(bytes32,bytes)\":{\"details\":\"The signature is valid if it is signed by the owner's private key (if the owner is an EOA) or if it is a valid ERC-1271 signature from the owner (if the owner is a contract).\",\"params\":{\"hash\":\"Hash of the data to be signed.\",\"signature\":\"Signature byte array associated with the data.\"},\"returns\":{\"_0\":\"Magic value `0x1626ba7e` if validation succeeded, else `0xffffffff`.\"}},\"owner()\":{\"returns\":{\"_0\":\"The current owner.\"}},\"performCreate(uint256,bytes)\":{\"details\":\"Assembly procedure:     1. Load the free memory pointer.     2. Get the initCode length.     3. Copy the initCode from callata to memory at the free memory pointer.     4. Create the contract.     5. If creation failed (the address returned is zero), revert with CreateFailed().\",\"params\":{\"initCode\":\"The initCode to deploy.\",\"value\":\"The value to send to the new contract constructor.\"},\"returns\":{\"createdAddr\":\"The created contract address.\"}},\"performCreate2(uint256,bytes,bytes32)\":{\"details\":\"Assembly procedure:     1. Load the free memory pointer.     2. Get the initCode length.     3. Copy the initCode from callata to memory at the free memory pointer.     4. Create the contract using Create2 with the passed salt parameter.     5. If creation failed (the address returned is zero), revert with CreateFailed().\",\"params\":{\"initCode\":\"The initCode to deploy.\",\"salt\":\"The salt to use for the create2 operation.\",\"value\":\"The value to send to the new contract constructor.\"},\"returns\":{\"createdAddr\":\"The created contract address.\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferOwnership(address)\":{\"params\":{\"newOwner\":\"The new owner.\"}},\"validateUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)\":{\"details\":\"Must validate caller is the entryPoint.      Must validate the signature and nonce\",\"params\":{\"missingAccountFunds\":\"- Missing funds on the account's deposit in the entrypoint.                              This is the minimum amount to transfer to the sender(entryPoint) to be                              able to make the call. The excess is left as a deposit in the entrypoint                              for future calls. Can be withdrawn anytime using \\\"entryPoint.withdrawTo()\\\".                              In case there is a paymaster in the request (or the current deposit is high                              enough), this value will be zero.\",\"userOp\":\"- The operation that is about to be executed.\",\"userOpHash\":\"- Hash of the user's request data. can be used as the basis for signature.\"},\"returns\":{\"validationData\":\"      - Packaged ValidationData structure. use `_packValidationData` and                              `_unpackValidationData` to encode and decode.                              <20-byte> sigAuthorizer - 0 for valid signature, 1 to mark signature failure,                                 otherwise, an address of an \\\"authorizer\\\" contract.                              <6-byte> validUntil - Last timestamp this operation is valid. 0 for \\\"indefinite\\\"                              <6-byte> validAfter - First timestamp this operation is valid                                                    If an account doesn't use time-range, it is enough to                                                    return SIG_VALIDATION_FAILED value (1) for signature failure.                              Note that the validation code cannot use block.timestamp (or block.number) directly.\"}},\"withdrawDepositTo(address,uint256)\":{\"params\":{\"amount\":\"Amount to withdraw.\",\"withdrawAddress\":\"Target to send to.\"}}},\"stateVariables\":{\"_INITIALIZABLE_STORAGE_POSITION\":{\"details\":\"keccak256(\\\"flash_account.initializable\\\");\"},\"_STORAGE_POSITION\":{\"details\":\"keccak256(\\\"flash_account.storage\\\");\"}},\"title\":\"A simple ERC-4337 compatible smart contract account with a designated owner account.\",\"version\":1},\"userdoc\":{\"events\":{\"LightAccountInitialized(address,address)\":{\"notice\":\"Emitted when this account is first initialized.\"},\"OwnershipTransferred(address,address)\":{\"notice\":\"Emitted when this account's owner changes. Also emitted once at initialization, with a `previousOwner` of 0.\"}},\"kind\":\"user\",\"methods\":{\"addDeposit()\":{\"notice\":\"Deposit more funds for this account in the entry point.\"},\"entryPoint()\":{\"notice\":\"Return the entryPoint used by this account. Subclass should return the current entryPoint used by this account.\"},\"execute(address,uint256,bytes)\":{\"notice\":\"Execute a transaction. This may only be called directly by an owner or by the entry point via a user operation signed by an owner.\"},\"executeBatch(address[],bytes[])\":{\"notice\":\"Execute a sequence of transactions.\"},\"executeBatch(address[],uint256[],bytes[])\":{\"notice\":\"Execute a sequence of transactions.\"},\"getDeposit()\":{\"notice\":\"Check current account deposit in the entry point.\"},\"getMessageHash(bytes)\":{\"notice\":\"Returns the replay-safe hash of a message that can be signed by owners.\"},\"getNonce()\":{\"notice\":\"Return the account nonce. This method returns the next sequential nonce. For a nonce of a specific key, use `entrypoint.getNonce(account, key)`\"},\"initialize(address)\":{\"notice\":\"Called once as part of initialization, either during initial deployment or when first upgrading to this contract.\"},\"owner()\":{\"notice\":\"Return the current owner of this account.\"},\"performCreate(uint256,bytes)\":{\"notice\":\"Creates a contract.\"},\"performCreate2(uint256,bytes,bytes32)\":{\"notice\":\"Creates a contract using create2 deterministic deployment.\"},\"transferOwnership(address)\":{\"notice\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner or from the entry point via a user operation signed by the current owner.\"},\"validateUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)\":{\"notice\":\"Validate user's signature and nonce the entryPoint will make the call to the recipient only if this validation call returns successfully. signature failure should be reported by returning SIG_VALIDATION_FAILED (1). This allows making a \\\"simulation call\\\" without a valid signature Other failures (e.g. nonce mismatch, or invalid signature format) should still revert to signal failure.\"},\"withdrawDepositTo(address,uint256)\":{\"notice\":\"Withdraw value from the account's deposit.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/1delta/flash-account/FlashAccountBase.sol\":\"FlashAccountBase\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":9950},\"remappings\":[\":@chainlink/contracts/=node_modules/@chainlink/contracts/\",\":@flash-account/=contracts/1delta/flash-account/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":account-abstraction/=lib/account-abstraction/contracts/\",\":base64-sol/=lib/base64/\",\":base64/=lib/base64/\",\":ds-test/=contracts/ds-test/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":hardhat/=node_modules/hardhat/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"contracts/1delta/flash-account/FlashAccountBase.sol\":{\"keccak256\":\"0x28210148ee56833e2209306c02123eae79f18a536ac6cb05fc932df5a09ac4bb\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://2d19aedbf9fdbe87b05fbc35039deec4bf605c9cff74684c0701fb12572693c7\",\"dweb:/ipfs/QmdZwha9n9xkzfToJpZmu6hWmZXXY1VhmtRADBCwuS3i11\"]},\"contracts/1delta/flash-account/common/BaseLightAccount.sol\":{\"keccak256\":\"0xdb86b8493ec3edfb4df0e49c9d784888378df1dbacfd8c4e390aa6e537f50869\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://2535907efa4eb4228d0d43af0a35c851bdf7b8453a570a9d1f5e4ea90142a0de\",\"dweb:/ipfs/QmanATSdWVcDuJjCJocsJQAnPmCbyWxXz31RQCfN7oqR7T\"]},\"contracts/1delta/flash-account/common/CustomSlotInitializable.sol\":{\"keccak256\":\"0xc0ab88d8c4382428d6fdd6890f143773caf9623bce52a459c02a14f01b9210d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://362fab071b94cb5ad4db2a06e8ec33a580563c19a047b0fd1802e596d961cb8c\",\"dweb:/ipfs/QmVV9iCVrRtg6e7aYWaFkVUcT2EK9yxvwNod1R1fAA9Rny\"]},\"contracts/1delta/flash-account/common/EIP712.sol\":{\"keccak256\":\"0xc256c8769c2aa92fa192d21f5f4bd4387dfc6ef095d1a18476a3c6ea2e43f4f3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce6386477e8f74d89e68071c000bd98ebdab9f0ad154615b84492ff94d17a783\",\"dweb:/ipfs/QmZMX8Pivh7sJxX72pjPn2PcMREcRz1AM4oKNNgPf6bndK\"]},\"contracts/1delta/flash-account/common/ERC1271.sol\":{\"keccak256\":\"0x8844db3fbde5549e3921afc7afd6fceed8f0f9224b1f73dd278f1523d3140e9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://547b60f10840a810da6fa00b303cdaa827ba6018e214563ddd127417cd5186e1\",\"dweb:/ipfs/QmbTbABANZqKAMJFhsbH2S7JaYbYASNzdWftuTAmJCTKk1\"]},\"contracts/1delta/flash-account/common/ExecutionLock.sol\":{\"keccak256\":\"0xe4191855944f71b2fa334c2b3c7fa16a7f8eb313bc6d00392be7c3f5d58d123e\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://17bb8876a40594432714fedb214643913c779a97c1694ca934cbd9fda88712cd\",\"dweb:/ipfs/QmZ1hk4djnSduZh5Hhz4W93pE7vnH98VY22Yrv8TCGzMHq\"]},\"lib/account-abstraction/contracts/core/BaseAccount.sol\":{\"keccak256\":\"0x2736272f077d1699b8b8bf8be18d1c20e506668fc52b3293da70d17e63794358\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://35744475cf48405d7fd6edf6a96c84ef9da3ce844d8dfe3e2e1ffc30edf21d07\",\"dweb:/ipfs/QmUdau9VjVQ7iuRbdTmFSrXP7Hcasd9Cc57LP9thK78bwj\"]},\"lib/account-abstraction/contracts/core/Helpers.sol\":{\"keccak256\":\"0x6247e011a6cb0b263b3aa098822977181674d91b62e5bdfe04c6e66f72da25d6\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ca829a69b3fbc74fec8e140d42a2bf93bc3512609272f031c846470f61f0ab7e\",\"dweb:/ipfs/QmP3r3MBgAN39KeVB1rCGJWwcBcotNt26ALtAR54poQ1Jc\"]},\"lib/account-abstraction/contracts/core/UserOperationLib.sol\":{\"keccak256\":\"0x9d50ece985d35f82e33e5da417595c86fac10449e3d10895d08363d33aad454b\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://b1d11cc364c8bf7ed5388268c895b5ffed16e87dfbcb320ddeeba5e7974315dc\",\"dweb:/ipfs/QmYSpvjxEjweietQrYZagwQ52ipy7eXx4rwvnTzXKeGeMS\"]},\"lib/account-abstraction/contracts/interfaces/IAccount.sol\":{\"keccak256\":\"0x38710bec0cb20ff4ceef46a80475b5bdabc27b7efd2687fd473db68332f61b78\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://dea7a723e1ef852e8764e69914a345d2e8bc5e13facfc9d5c29d791cb4ab0020\",\"dweb:/ipfs/QmU8dYgyF4DBJXFqjwLAtnE3q8q259ChfoEk9a6wyhHzEP\"]},\"lib/account-abstraction/contracts/interfaces/IAggregator.sol\":{\"keccak256\":\"0xf100d6fcc0c3b450b13e979b6a42c628c292a1bc340eccc2e7796b80e3975588\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://192938b5b27234d35c8098a319e879363c79f750eea4d0e409dc889a8ce5b155\",\"dweb:/ipfs/QmURpaJFPqEtkKP2ngBsgZhAGN8wAWh5XQpYmCkiz4Urz5\"]},\"lib/account-abstraction/contracts/interfaces/IEntryPoint.sol\":{\"keccak256\":\"0x1972a5fcb3a808b58c85af5741949ef6af11ab0debd3ae8c708171ae1ae0d0c4\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://baa9837ae73b9e2362a47d42d081d7c0f3d8e878e5edb381117d94a6968949c9\",\"dweb:/ipfs/QmUmo6FUE7fv5z1WzW1YFjxp8PqaeN2JrEee9au59w3Xhe\"]},\"lib/account-abstraction/contracts/interfaces/INonceManager.sol\":{\"keccak256\":\"0xd575af0f6ebbd5f0b2933307d44cd7b4e03a69f4b817a67db5409bd3c89aeecb\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://3b1e2dea9b05cfba9d13339ed16d96457dc861013cc4f3f35b71a80f82448db3\",\"dweb:/ipfs/QmVaGy5uGDMSiU2SzyokTjoHFyb39VVG5wtaM9KTnHyZSk\"]},\"lib/account-abstraction/contracts/interfaces/IStakeManager.sol\":{\"keccak256\":\"0xbe5ca9e7f254d031687419e7b96ef48c9c63e9398bbe992dc72ffc6dc14e0a04\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://1fffec71c38627a26fabb423350148009579f092623fb02b471a12d973763a00\",\"dweb:/ipfs/QmRBi31QEYXHj3x1AnQ2jKa2eziZH1b9av396P3b4dw6bj\"]},\"lib/account-abstraction/contracts/interfaces/PackedUserOperation.sol\":{\"keccak256\":\"0x1129b46381db68eddbc5cb49e50664667b66b03c480453858e7b25eabe444359\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://499a948aba60480dba6e25c763b8d918f1c246eb7a3302e04f493e080f3295be\",\"dweb:/ipfs/QmeRhhswf4NACcBKam2PyjpTP2ddSm648kah5kkQJsvwz3\"]},\"lib/account-abstraction/contracts/samples/callback/TokenCallbackHandler.sol\":{\"keccak256\":\"0x7770340a57c4be2b718b6ac2b031722074c0d795e0f4e1a6740ca1aa3d85e9d7\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://2228ef19911d6ff9cfc3a9177335468f2c504a0e9015b6257233a7f915d2b6fe\",\"dweb:/ipfs/QmbTydBiSHzhJUhR6AgNQ7HcWitKr1BoHy3ii1YpVS7rfi\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC1271.sol\":{\"keccak256\":\"0xc92e946b954f185c3ca5ee56f9721aa73d64464456a46459384cb0ccf3c3856e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ae178b4e7b259557d8b93f3dd4f6f909ac72f914a9e92676e59b8d737f0423e2\",\"dweb:/ipfs/QmXeqyUJYzn6w8wyivQAtSzmwwFQnHaFYPvGad66RW1sPf\"]},\"lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x61a23d601c2ab69dd726ac55058604cbda98e1d728ba31a51c379a3f9eeea715\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8cbb06152d82ebdd5ba1d33454e5759492040f309a82637c7e99c948a04fa20\",\"dweb:/ipfs/QmQQuLr6WSfLu97pMEh6XLefk99TSj9k5Qu1zXGPepwGiK\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xb5afb8e8eebc4d1c6404df2f5e1e6d2c3d24fd01e5dfc855314951ecfaae462d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://78586466c424f076c6a2a551d848cfbe3f7c49e723830807598484a1047b3b34\",\"dweb:/ipfs/Qmb717ovcFxm7qgNKEShiV6M9SPR3v1qnNpAGH84D6w29p\"]},\"lib/openzeppelin-contracts/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0xdcc9bd8f769fdf5951281dcd4e03f651674ad4061ef4bdc9946df12de979a865\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e05b5b4463c67a3f831f2f6b2edf0b46e2503847e90e67bccc7e0b8fad7c3a68\",\"dweb:/ipfs/QmW46c35vZD48MkwHbsMNjDgkwFLguTTsRpNwxaw8zNUvF\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x8b2e492a62de1334a04bb8cc8104750cbc6ca4b339c7808cd14da8492d4bfbd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc671bac8e9a810f7c51214398282e6449ef7e4dfe8e2635a0dc8516c812fef0\",\"dweb:/ipfs/QmPr1KkJ8Fq1zbdDYsCQWbHn9B7GKxWHhsgFUXtxYM7b7U\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/SignatureChecker.sol\":{\"keccak256\":\"0xbdc3bb48ccedb818cd75a6d74a16df55a822e9f6d3cc54c59f576f10aab67b5f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2284f25f2478f419d7781573b17a89d0e7c5589a865d55e2d6ed5163aee23aa8\",\"dweb:/ipfs/QmNsr2625APBQiNKpYnX5VcSnYgfUHR9Uzzp9pRXjoDqK7\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x6f61a65c733690afafb4cf528b5677e704828c8350b60b948dbc1d3bb6d7689c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://00265b985b303af62ee243e10db819fa8cf890d9f122f82f4f03f55b02f62654\",\"dweb:/ipfs/QmNneFqZn2uKK6dECxatH6aENk1EMCTETi58dGaz5NCWQe\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.28+commit.7893614a"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract IEntryPoint",
              "name": "entryPoint_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ArrayLengthMismatch"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CreateFailed"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ECDSAInvalidSignature"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "length",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "ECDSAInvalidSignatureLength"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "type": "error",
          "name": "ECDSAInvalidSignatureS"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidInitialization"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "InvalidOwner"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidSignatureType"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Locked"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "caller",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "NotAuthorized"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NotInitializing"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ZeroAddressNotAllowed"
        },
        {
          "inputs": [
            {
              "internalType": "uint64",
              "name": "version",
              "type": "uint64",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "contract IEntryPoint",
              "name": "entryPoint",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "LightAccountInitialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "function",
          "name": "addDeposit"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "eip712Domain",
          "outputs": [
            {
              "internalType": "bytes1",
              "name": "fields",
              "type": "bytes1"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "version",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "chainId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "verifyingContract",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "salt",
              "type": "bytes32"
            },
            {
              "internalType": "uint256[]",
              "name": "extensions",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "entryPoint",
          "outputs": [
            {
              "internalType": "contract IEntryPoint",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "dest",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "func",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "execute"
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "dest",
              "type": "address[]"
            },
            {
              "internalType": "bytes[]",
              "name": "func",
              "type": "bytes[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "executeBatch"
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "dest",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "value",
              "type": "uint256[]"
            },
            {
              "internalType": "bytes[]",
              "name": "func",
              "type": "bytes[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "executeBatch"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getDeposit",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "message",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getMessageHash",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getNonce",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "hash",
              "type": "bytes32"
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isValidSignature",
          "outputs": [
            {
              "internalType": "bytes4",
              "name": "",
              "type": "bytes4"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "onERC1155BatchReceived",
          "outputs": [
            {
              "internalType": "bytes4",
              "name": "",
              "type": "bytes4"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "onERC1155Received",
          "outputs": [
            {
              "internalType": "bytes4",
              "name": "",
              "type": "bytes4"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "onERC721Received",
          "outputs": [
            {
              "internalType": "bytes4",
              "name": "",
              "type": "bytes4"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "initCode",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "performCreate",
          "outputs": [
            {
              "internalType": "address",
              "name": "createdAddr",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "initCode",
              "type": "bytes"
            },
            {
              "internalType": "bytes32",
              "name": "salt",
              "type": "bytes32"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "performCreate2",
          "outputs": [
            {
              "internalType": "address",
              "name": "createdAddr",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "struct PackedUserOperation",
              "name": "userOp",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "initCode",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "callData",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes32",
                  "name": "accountGasLimits",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "preVerificationGas",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "gasFees",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes",
                  "name": "paymasterAndData",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "bytes32",
              "name": "userOpHash",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "missingAccountFunds",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "validateUserOp",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "validationData",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address payable",
              "name": "withdrawAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawDepositTo"
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "receive"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "eip712Domain()": {
            "details": "See: https://eips.ethereum.org/EIPS/eip-5267"
          },
          "execute(address,uint256,bytes)": {
            "params": {
              "dest": "The target of the transaction.",
              "func": "The transaction's calldata.",
              "value": "The amount of wei sent in the transaction."
            }
          },
          "executeBatch(address[],bytes[])": {
            "params": {
              "dest": "An array of the targets for each transaction in the sequence.",
              "func": "An array of calldata for each transaction in the sequence. Must be the same length as `dest`, with corresponding elements representing the parameters for each transaction."
            }
          },
          "executeBatch(address[],uint256[],bytes[])": {
            "params": {
              "dest": "An array of the targets for each transaction in the sequence.",
              "func": "An array of calldata for each transaction in the sequence. Must be the same length as `dest`, with corresponding elements representing the parameters for each transaction.",
              "value": "An array of value for each transaction in the sequence."
            }
          },
          "getDeposit()": {
            "returns": {
              "_0": "The current account deposit."
            }
          },
          "getMessageHash(bytes)": {
            "params": {
              "message": "Message that should be hashed."
            },
            "returns": {
              "_0": "The replay-safe message hash."
            }
          },
          "initialize(address)": {
            "details": "The `_ENTRY_POINT` member is immutable, to reduce gas consumption. To update the entry point address, a new implementation of LightAccount must be deployed with the new entry point address, and then `upgradeToAndCall` must be called to upgrade the implementation.",
            "params": {
              "owner_": "The initial owner of the account."
            }
          },
          "isValidSignature(bytes32,bytes)": {
            "details": "The signature is valid if it is signed by the owner's private key (if the owner is an EOA) or if it is a valid ERC-1271 signature from the owner (if the owner is a contract).",
            "params": {
              "hash": "Hash of the data to be signed.",
              "signature": "Signature byte array associated with the data."
            },
            "returns": {
              "_0": "Magic value `0x1626ba7e` if validation succeeded, else `0xffffffff`."
            }
          },
          "owner()": {
            "returns": {
              "_0": "The current owner."
            }
          },
          "performCreate(uint256,bytes)": {
            "details": "Assembly procedure:     1. Load the free memory pointer.     2. Get the initCode length.     3. Copy the initCode from callata to memory at the free memory pointer.     4. Create the contract.     5. If creation failed (the address returned is zero), revert with CreateFailed().",
            "params": {
              "initCode": "The initCode to deploy.",
              "value": "The value to send to the new contract constructor."
            },
            "returns": {
              "createdAddr": "The created contract address."
            }
          },
          "performCreate2(uint256,bytes,bytes32)": {
            "details": "Assembly procedure:     1. Load the free memory pointer.     2. Get the initCode length.     3. Copy the initCode from callata to memory at the free memory pointer.     4. Create the contract using Create2 with the passed salt parameter.     5. If creation failed (the address returned is zero), revert with CreateFailed().",
            "params": {
              "initCode": "The initCode to deploy.",
              "salt": "The salt to use for the create2 operation.",
              "value": "The value to send to the new contract constructor."
            },
            "returns": {
              "createdAddr": "The created contract address."
            }
          },
          "supportsInterface(bytes4)": {
            "details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
          },
          "transferOwnership(address)": {
            "params": {
              "newOwner": "The new owner."
            }
          },
          "validateUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)": {
            "details": "Must validate caller is the entryPoint.      Must validate the signature and nonce",
            "params": {
              "missingAccountFunds": "- Missing funds on the account's deposit in the entrypoint.                              This is the minimum amount to transfer to the sender(entryPoint) to be                              able to make the call. The excess is left as a deposit in the entrypoint                              for future calls. Can be withdrawn anytime using \"entryPoint.withdrawTo()\".                              In case there is a paymaster in the request (or the current deposit is high                              enough), this value will be zero.",
              "userOp": "- The operation that is about to be executed.",
              "userOpHash": "- Hash of the user's request data. can be used as the basis for signature."
            },
            "returns": {
              "validationData": "      - Packaged ValidationData structure. use `_packValidationData` and                              `_unpackValidationData` to encode and decode.                              <20-byte> sigAuthorizer - 0 for valid signature, 1 to mark signature failure,                                 otherwise, an address of an \"authorizer\" contract.                              <6-byte> validUntil - Last timestamp this operation is valid. 0 for \"indefinite\"                              <6-byte> validAfter - First timestamp this operation is valid                                                    If an account doesn't use time-range, it is enough to                                                    return SIG_VALIDATION_FAILED value (1) for signature failure.                              Note that the validation code cannot use block.timestamp (or block.number) directly."
            }
          },
          "withdrawDepositTo(address,uint256)": {
            "params": {
              "amount": "Amount to withdraw.",
              "withdrawAddress": "Target to send to."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "addDeposit()": {
            "notice": "Deposit more funds for this account in the entry point."
          },
          "entryPoint()": {
            "notice": "Return the entryPoint used by this account. Subclass should return the current entryPoint used by this account."
          },
          "execute(address,uint256,bytes)": {
            "notice": "Execute a transaction. This may only be called directly by an owner or by the entry point via a user operation signed by an owner."
          },
          "executeBatch(address[],bytes[])": {
            "notice": "Execute a sequence of transactions."
          },
          "executeBatch(address[],uint256[],bytes[])": {
            "notice": "Execute a sequence of transactions."
          },
          "getDeposit()": {
            "notice": "Check current account deposit in the entry point."
          },
          "getMessageHash(bytes)": {
            "notice": "Returns the replay-safe hash of a message that can be signed by owners."
          },
          "getNonce()": {
            "notice": "Return the account nonce. This method returns the next sequential nonce. For a nonce of a specific key, use `entrypoint.getNonce(account, key)`"
          },
          "initialize(address)": {
            "notice": "Called once as part of initialization, either during initial deployment or when first upgrading to this contract."
          },
          "owner()": {
            "notice": "Return the current owner of this account."
          },
          "performCreate(uint256,bytes)": {
            "notice": "Creates a contract."
          },
          "performCreate2(uint256,bytes,bytes32)": {
            "notice": "Creates a contract using create2 deterministic deployment."
          },
          "transferOwnership(address)": {
            "notice": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner or from the entry point via a user operation signed by the current owner."
          },
          "validateUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)": {
            "notice": "Validate user's signature and nonce the entryPoint will make the call to the recipient only if this validation call returns successfully. signature failure should be reported by returning SIG_VALIDATION_FAILED (1). This allows making a \"simulation call\" without a valid signature Other failures (e.g. nonce mismatch, or invalid signature format) should still revert to signal failure."
          },
          "withdrawDepositTo(address,uint256)": {
            "notice": "Withdraw value from the account's deposit."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@chainlink/contracts/=node_modules/@chainlink/contracts/",
        "@flash-account/=contracts/1delta/flash-account/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "account-abstraction/=lib/account-abstraction/contracts/",
        "base64-sol/=lib/base64/",
        "base64/=lib/base64/",
        "ds-test/=contracts/ds-test/",
        "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/",
        "hardhat/=node_modules/hardhat/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 9950
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/1delta/flash-account/FlashAccountBase.sol": "FlashAccountBase"
      },
      "evmVersion": "cancun",
      "libraries": {}
    },
    "sources": {
      "contracts/1delta/flash-account/FlashAccountBase.sol": {
        "keccak256": "0x28210148ee56833e2209306c02123eae79f18a536ac6cb05fc932df5a09ac4bb",
        "urls": [
          "bzz-raw://2d19aedbf9fdbe87b05fbc35039deec4bf605c9cff74684c0701fb12572693c7",
          "dweb:/ipfs/QmdZwha9n9xkzfToJpZmu6hWmZXXY1VhmtRADBCwuS3i11"
        ],
        "license": "GPL-3.0"
      },
      "contracts/1delta/flash-account/common/BaseLightAccount.sol": {
        "keccak256": "0xdb86b8493ec3edfb4df0e49c9d784888378df1dbacfd8c4e390aa6e537f50869",
        "urls": [
          "bzz-raw://2535907efa4eb4228d0d43af0a35c851bdf7b8453a570a9d1f5e4ea90142a0de",
          "dweb:/ipfs/QmanATSdWVcDuJjCJocsJQAnPmCbyWxXz31RQCfN7oqR7T"
        ],
        "license": "GPL-3.0"
      },
      "contracts/1delta/flash-account/common/CustomSlotInitializable.sol": {
        "keccak256": "0xc0ab88d8c4382428d6fdd6890f143773caf9623bce52a459c02a14f01b9210d6",
        "urls": [
          "bzz-raw://362fab071b94cb5ad4db2a06e8ec33a580563c19a047b0fd1802e596d961cb8c",
          "dweb:/ipfs/QmVV9iCVrRtg6e7aYWaFkVUcT2EK9yxvwNod1R1fAA9Rny"
        ],
        "license": "MIT"
      },
      "contracts/1delta/flash-account/common/EIP712.sol": {
        "keccak256": "0xc256c8769c2aa92fa192d21f5f4bd4387dfc6ef095d1a18476a3c6ea2e43f4f3",
        "urls": [
          "bzz-raw://ce6386477e8f74d89e68071c000bd98ebdab9f0ad154615b84492ff94d17a783",
          "dweb:/ipfs/QmZMX8Pivh7sJxX72pjPn2PcMREcRz1AM4oKNNgPf6bndK"
        ],
        "license": "MIT"
      },
      "contracts/1delta/flash-account/common/ERC1271.sol": {
        "keccak256": "0x8844db3fbde5549e3921afc7afd6fceed8f0f9224b1f73dd278f1523d3140e9a",
        "urls": [
          "bzz-raw://547b60f10840a810da6fa00b303cdaa827ba6018e214563ddd127417cd5186e1",
          "dweb:/ipfs/QmbTbABANZqKAMJFhsbH2S7JaYbYASNzdWftuTAmJCTKk1"
        ],
        "license": "MIT"
      },
      "contracts/1delta/flash-account/common/ExecutionLock.sol": {
        "keccak256": "0xe4191855944f71b2fa334c2b3c7fa16a7f8eb313bc6d00392be7c3f5d58d123e",
        "urls": [
          "bzz-raw://17bb8876a40594432714fedb214643913c779a97c1694ca934cbd9fda88712cd",
          "dweb:/ipfs/QmZ1hk4djnSduZh5Hhz4W93pE7vnH98VY22Yrv8TCGzMHq"
        ],
        "license": "GPL-3.0"
      },
      "lib/account-abstraction/contracts/core/BaseAccount.sol": {
        "keccak256": "0x2736272f077d1699b8b8bf8be18d1c20e506668fc52b3293da70d17e63794358",
        "urls": [
          "bzz-raw://35744475cf48405d7fd6edf6a96c84ef9da3ce844d8dfe3e2e1ffc30edf21d07",
          "dweb:/ipfs/QmUdau9VjVQ7iuRbdTmFSrXP7Hcasd9Cc57LP9thK78bwj"
        ],
        "license": "GPL-3.0"
      },
      "lib/account-abstraction/contracts/core/Helpers.sol": {
        "keccak256": "0x6247e011a6cb0b263b3aa098822977181674d91b62e5bdfe04c6e66f72da25d6",
        "urls": [
          "bzz-raw://ca829a69b3fbc74fec8e140d42a2bf93bc3512609272f031c846470f61f0ab7e",
          "dweb:/ipfs/QmP3r3MBgAN39KeVB1rCGJWwcBcotNt26ALtAR54poQ1Jc"
        ],
        "license": "GPL-3.0"
      },
      "lib/account-abstraction/contracts/core/UserOperationLib.sol": {
        "keccak256": "0x9d50ece985d35f82e33e5da417595c86fac10449e3d10895d08363d33aad454b",
        "urls": [
          "bzz-raw://b1d11cc364c8bf7ed5388268c895b5ffed16e87dfbcb320ddeeba5e7974315dc",
          "dweb:/ipfs/QmYSpvjxEjweietQrYZagwQ52ipy7eXx4rwvnTzXKeGeMS"
        ],
        "license": "GPL-3.0"
      },
      "lib/account-abstraction/contracts/interfaces/IAccount.sol": {
        "keccak256": "0x38710bec0cb20ff4ceef46a80475b5bdabc27b7efd2687fd473db68332f61b78",
        "urls": [
          "bzz-raw://dea7a723e1ef852e8764e69914a345d2e8bc5e13facfc9d5c29d791cb4ab0020",
          "dweb:/ipfs/QmU8dYgyF4DBJXFqjwLAtnE3q8q259ChfoEk9a6wyhHzEP"
        ],
        "license": "GPL-3.0"
      },
      "lib/account-abstraction/contracts/interfaces/IAggregator.sol": {
        "keccak256": "0xf100d6fcc0c3b450b13e979b6a42c628c292a1bc340eccc2e7796b80e3975588",
        "urls": [
          "bzz-raw://192938b5b27234d35c8098a319e879363c79f750eea4d0e409dc889a8ce5b155",
          "dweb:/ipfs/QmURpaJFPqEtkKP2ngBsgZhAGN8wAWh5XQpYmCkiz4Urz5"
        ],
        "license": "GPL-3.0"
      },
      "lib/account-abstraction/contracts/interfaces/IEntryPoint.sol": {
        "keccak256": "0x1972a5fcb3a808b58c85af5741949ef6af11ab0debd3ae8c708171ae1ae0d0c4",
        "urls": [
          "bzz-raw://baa9837ae73b9e2362a47d42d081d7c0f3d8e878e5edb381117d94a6968949c9",
          "dweb:/ipfs/QmUmo6FUE7fv5z1WzW1YFjxp8PqaeN2JrEee9au59w3Xhe"
        ],
        "license": "GPL-3.0"
      },
      "lib/account-abstraction/contracts/interfaces/INonceManager.sol": {
        "keccak256": "0xd575af0f6ebbd5f0b2933307d44cd7b4e03a69f4b817a67db5409bd3c89aeecb",
        "urls": [
          "bzz-raw://3b1e2dea9b05cfba9d13339ed16d96457dc861013cc4f3f35b71a80f82448db3",
          "dweb:/ipfs/QmVaGy5uGDMSiU2SzyokTjoHFyb39VVG5wtaM9KTnHyZSk"
        ],
        "license": "GPL-3.0"
      },
      "lib/account-abstraction/contracts/interfaces/IStakeManager.sol": {
        "keccak256": "0xbe5ca9e7f254d031687419e7b96ef48c9c63e9398bbe992dc72ffc6dc14e0a04",
        "urls": [
          "bzz-raw://1fffec71c38627a26fabb423350148009579f092623fb02b471a12d973763a00",
          "dweb:/ipfs/QmRBi31QEYXHj3x1AnQ2jKa2eziZH1b9av396P3b4dw6bj"
        ],
        "license": "GPL-3.0-only"
      },
      "lib/account-abstraction/contracts/interfaces/PackedUserOperation.sol": {
        "keccak256": "0x1129b46381db68eddbc5cb49e50664667b66b03c480453858e7b25eabe444359",
        "urls": [
          "bzz-raw://499a948aba60480dba6e25c763b8d918f1c246eb7a3302e04f493e080f3295be",
          "dweb:/ipfs/QmeRhhswf4NACcBKam2PyjpTP2ddSm648kah5kkQJsvwz3"
        ],
        "license": "GPL-3.0"
      },
      "lib/account-abstraction/contracts/samples/callback/TokenCallbackHandler.sol": {
        "keccak256": "0x7770340a57c4be2b718b6ac2b031722074c0d795e0f4e1a6740ca1aa3d85e9d7",
        "urls": [
          "bzz-raw://2228ef19911d6ff9cfc3a9177335468f2c504a0e9015b6257233a7f915d2b6fe",
          "dweb:/ipfs/QmbTydBiSHzhJUhR6AgNQ7HcWitKr1BoHy3ii1YpVS7rfi"
        ],
        "license": "GPL-3.0"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC1271.sol": {
        "keccak256": "0xc92e946b954f185c3ca5ee56f9721aa73d64464456a46459384cb0ccf3c3856e",
        "urls": [
          "bzz-raw://ae178b4e7b259557d8b93f3dd4f6f909ac72f914a9e92676e59b8d737f0423e2",
          "dweb:/ipfs/QmXeqyUJYzn6w8wyivQAtSzmwwFQnHaFYPvGad66RW1sPf"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol": {
        "keccak256": "0x61a23d601c2ab69dd726ac55058604cbda98e1d728ba31a51c379a3f9eeea715",
        "urls": [
          "bzz-raw://d8cbb06152d82ebdd5ba1d33454e5759492040f309a82637c7e99c948a04fa20",
          "dweb:/ipfs/QmQQuLr6WSfLu97pMEh6XLefk99TSj9k5Qu1zXGPepwGiK"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol": {
        "keccak256": "0xb5afb8e8eebc4d1c6404df2f5e1e6d2c3d24fd01e5dfc855314951ecfaae462d",
        "urls": [
          "bzz-raw://78586466c424f076c6a2a551d848cfbe3f7c49e723830807598484a1047b3b34",
          "dweb:/ipfs/Qmb717ovcFxm7qgNKEShiV6M9SPR3v1qnNpAGH84D6w29p"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Panic.sol": {
        "keccak256": "0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a",
        "urls": [
          "bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a",
          "dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0xdcc9bd8f769fdf5951281dcd4e03f651674ad4061ef4bdc9946df12de979a865",
        "urls": [
          "bzz-raw://e05b5b4463c67a3f831f2f6b2edf0b46e2503847e90e67bccc7e0b8fad7c3a68",
          "dweb:/ipfs/QmW46c35vZD48MkwHbsMNjDgkwFLguTTsRpNwxaw8zNUvF"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol": {
        "keccak256": "0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84",
        "urls": [
          "bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9",
          "dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol": {
        "keccak256": "0x8b2e492a62de1334a04bb8cc8104750cbc6ca4b339c7808cd14da8492d4bfbd7",
        "urls": [
          "bzz-raw://bc671bac8e9a810f7c51214398282e6449ef7e4dfe8e2635a0dc8516c812fef0",
          "dweb:/ipfs/QmPr1KkJ8Fq1zbdDYsCQWbHn9B7GKxWHhsgFUXtxYM7b7U"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/cryptography/SignatureChecker.sol": {
        "keccak256": "0xbdc3bb48ccedb818cd75a6d74a16df55a822e9f6d3cc54c59f576f10aab67b5f",
        "urls": [
          "bzz-raw://2284f25f2478f419d7781573b17a89d0e7c5589a865d55e2d6ed5163aee23aa8",
          "dweb:/ipfs/QmNsr2625APBQiNKpYnX5VcSnYgfUHR9Uzzp9pRXjoDqK7"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8",
        "urls": [
          "bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621",
          "dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0x6f61a65c733690afafb4cf528b5677e704828c8350b60b948dbc1d3bb6d7689c",
        "urls": [
          "bzz-raw://00265b985b303af62ee243e10db819fa8cf890d9f122f82f4f03f55b02f62654",
          "dweb:/ipfs/QmNneFqZn2uKK6dECxatH6aENk1EMCTETi58dGaz5NCWQe"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol": {
        "keccak256": "0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54",
        "urls": [
          "bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8",
          "dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol": {
        "keccak256": "0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3",
        "urls": [
          "bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03",
          "dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "id": 1
}